"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[2808],{8993:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>h});var s=t(4848),r=t(8453),c=(t(1441),t(5347));const i={sidebar_position:6,title:"API \u30ec\u30d5\u30a1\u30ec\u30f3\u30b9\u60c5\u5831",pagination_prev:null,sidebar_label:"API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","\u8aac\u660e":"\u77e5\u3063\u3066\u304a\u304f\u3079\u304dAPI\u30b3\u30fc\u30eb\u3092\u5b66\u3093\u3067\u3001Momento Cache\u3068\u5171\u306b\u4f7f\u3063\u3066\u307f\u3088\u3046\u3002"},a="Momento Cache API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9",l={id:"cache/develop/api-reference/index",title:"API \u30ec\u30d5\u30a1\u30ec\u30f3\u30b9\u60c5\u5831",description:"\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebAPI",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/cache/develop/api-reference/index.mdx",sourceDirName:"cache/develop/api-reference",slug:"/cache/develop/api-reference/",permalink:"/ja/cache/develop/api-reference/",draft:!1,unlisted:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/cache/develop/api-reference/index.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"API \u30ec\u30d5\u30a1\u30ec\u30f3\u30b9\u60c5\u5831",pagination_prev:null,sidebar_label:"API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","\u8aac\u660e":"\u77e5\u3063\u3066\u304a\u304f\u3079\u304dAPI\u30b3\u30fc\u30eb\u3092\u5b66\u3093\u3067\u3001Momento Cache\u3068\u5171\u306b\u4f7f\u3063\u3066\u307f\u3088\u3046\u3002"},sidebar:"cacheSidebar",next:{title:"Dictionary",permalink:"/ja/cache/develop/api-reference/dictionary-collections"}},o={},h=[{value:"\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebAPI",id:"\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebapi",level:2},{value:"Create cache",id:"create-cache",level:3},{value:"Delete cache",id:"delete-cache",level:3},{value:"List caches",id:"list-caches",level:3},{value:"Flush cache",id:"flush-cache",level:3},{value:"\u30c7\u30fc\u30bfAPI",id:"\u30c7\u30fc\u30bfapi",level:2},{value:"Set",id:"set",level:3},{value:"SetBatch",id:"setbatch",level:3},{value:"Get",id:"get",level:3},{value:"GetBatch",id:"getbatch",level:3},{value:"Delete",id:"delete",level:3},{value:"Increment",id:"increment",level:3},{value:"Ping",id:"ping",level:3},{value:"ItemGetType",id:"itemgettype",level:3},{value:"KeyExists",id:"keyexists",level:3},{value:"KeysExist",id:"keysexist",level:3},{value:"SetIfAbsent",id:"setifabsent",level:3},{value:"SetIfPresent",id:"setifpresent",level:3},{value:"SetIfEqual",id:"setifequal",level:3},{value:"SetIfNotEqual",id:"setifnotequal",level:3},{value:"SetIfPresentAndNotEqual",id:"setifpresentandnotequal",level:3},{value:"SetIfAbsentOrEqual",id:"setifabsentorequal",level:3},{value:"\u751f\u5b58\u6642\u9593(TTL)API",id:"\u751f\u5b58\u6642\u9593ttlapi",level:2},{value:"UpdateTtl",id:"updatettl",level:3},{value:"IncreaseTtl",id:"increasettl",level:3},{value:"DecreaseTtl",id:"decreasettl",level:3},{value:"ItemGetTtl",id:"itemgetttl",level:3},{value:"\u8a8d\u8a3cAPI",id:"\u8a8d\u8a3capi",level:2},{value:"GenerateApiKey",id:"generateapikey",level:3},{value:"RefreshApiKey",id:"refreshapikey",level:3},{value:"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u578b",id:"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u578b",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",div:"div",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"momento-cache-api-\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9",children:"Momento Cache API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9"}),"\n",(0,s.jsx)(n.h2,{id:"\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebapi",children:"\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebAPI"}),"\n",(0,s.jsx)(n.p,{children:"\u3053\u308c\u3089\u306eAPI\u30e1\u30bd\u30c3\u30c9\u306f\u3001cache\u3092\u7ba1\u7406\u30fb\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.h3,{id:"create-cache",children:"Create cache"}),"\n",(0,s.jsx)(n.p,{children:"\u6307\u5b9a\u3055\u308c\u305f\u540d\u524d\u306ecache\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u5c5e\u6027:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u4f5c\u6210\u3059\u308bcache\u306e\u540d\u524d\u3002"})]})})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.createCache(cacheName);\nswitch (result.type) {\n  case CreateCacheResponse.AlreadyExists:\n    console.log(`Cache '${cacheName}' already exists`);\n    break;\n  case CreateCacheResponse.Success:\n    console.log(`Cache '${cacheName}' created`);\n    break;\n  case CreateCacheResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to create cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:'create_cache_response = await cache_client.create_cache("test-cache")\nmatch create_cache_response:\n    case CreateCache.Success():\n        print("Cache \'test-cache\' created")\n    case CreateCache.CacheAlreadyExists():\n        print("Cache \'test-cache\' already exists.")\n    case CreateCache.Error() as error:\n        print(f"An error occurred while attempting to create cache \'test-cache\': {error.message}")\n\n',java:'final CacheCreateResponse response = cacheClient.createCache("test-cache").join();\nif (response instanceof CacheCreateResponse.Success) {\n  System.out.println("Cache \'test-cache\' created");\n} else if (response instanceof CacheCreateResponse.Error error) {\n  if (error.getErrorCode() == MomentoErrorCode.ALREADY_EXISTS_ERROR) {\n    System.out.println("Cache \'test-cache\' already exists");\n  } else {\n    throw new RuntimeException(\n        "An error occurred while attempting to create cache \'test-cache\': "\n            + error.getErrorCode(),\n        error);\n  }\n}',kotlin:'when (val response = cacheClient.createCache("test-cache")) {\n    is CacheCreateResponse.Success -> println("Cache \'test-cache\' created")\n    is CacheCreateResponse.AlreadyExists -> println("Cache \'test-cache\' already exists")\n    is CacheCreateResponse.Error -> throw RuntimeException(\n        "An error occurred while attempting to create cache \'test-cache\': ${response.errorCode}", response\n    )\n}',go:"_, err := client.CreateCache(ctx, &momento.CreateCacheRequest{\n\tCacheName: cacheName,\n})\nif err != nil {\n\tpanic(err)\n}",csharp:'var result = await cacheClient.CreateCacheAsync("test-cache");\r\nif (result is CreateCacheResponse.Success)\r\n{\r\n    Console.WriteLine("Cache \'test-cache\' created");\r\n}\r\nelse if (result is CreateCacheResponse.CacheAlreadyExists)\r\n{\r\n    Console.WriteLine("Cache \'test-cache\' already exists");\r\n}\r\nelse if (result is CreateCacheResponse.Error error)\r\n{\r\n    throw new Exception($"An error occurred while attempting to create cache \'test-cache\': {error.ErrorCode}: {error}");\r\n}\r',php:'\n$create_cache_response = $cache_client->createCache("test-cache");\nif ($create_cache_response->asSuccess()) {\n    print("Cache \'test-cache\' created\\n");\n} elseif ($create_cache_response->asAlreadyExists()) {\n    print("Cache \'test-cache\' already exists\\n");\n} elseif ($err = $create_cache_response->asError()) {\n    print("An error occurred while attempting to create \'test-cache\': {$err->errorCode()} - {$err->message()}\\n");\n}',rust:'  match cache_client.create_cache(cache_name).await? {\n      CreateCacheResponse::Created => println!("Cache {} created", cache_name),\n      CreateCacheResponse::AlreadyExists => println!("Cache {} already exists", cache_name),\n  }',elixir:'case Momento.CacheClient.create_cache(client, "test-cache") do\n  {:ok, _} ->\n    IO.puts("Cache \'test-cache\' created")\n\n  :already_exists ->\n    :ok\n\n  {:error, error} ->\n    IO.puts(\n      "An error occurred while attempting to create cache \'test-cache\': #{error.error_code}"\n    )\n\n    raise error\nend',swift:'let result = await cacheClient.createCache(cacheName: cacheName)\nswitch result {\ncase .alreadyExists(_):\n    print("Cache already exists!")\ncase .success(_):\n    print("Successfully created the cache!")\ncase .error(let err):\n    print("Unable to create the cache: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.createCache("test-cache");\nswitch (result) {\n  case CreateCacheAlreadyExists():\n    print("Cache already exists");\n  case CreateCacheError():\n    print("Error creating cache: $result");\n  case CreateCacheSuccess():\n    print("Successfully created the cache");\n}',ts:""}),"\n",(0,s.jsx)(n.h3,{id:"delete-cache",children:"Delete cache"}),"\n",(0,s.jsx)(n.p,{children:"cache\u3092\u524a\u9664\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u5c5e\u6027:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u524a\u9664\u3059\u308bcache\u306e\u540d\u524d\u3002"})]})})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.deleteCache(cacheName);\nswitch (result.type) {\n  case DeleteCacheResponse.Success:\n    console.log(`Cache '${cacheName}' deleted`);\n    break;\n  case DeleteCacheResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to delete cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:'delete_cache_response = await cache_client.delete_cache("test-cache")\nmatch delete_cache_response:\n    case DeleteCache.Success():\n        print("Cache \'test-cache\' deleted")\n    case DeleteCache.Error() as error:\n        raise Exception(f"An error occurred while attempting to delete \'test-cache\': {error.message}")\n\n',java:'final CacheDeleteResponse response = cacheClient.deleteCache("test-cache").join();\nif (response instanceof CacheDeleteResponse.Success) {\n  System.out.println("Cache \'test-cache\' deleted");\n} else if (response instanceof CacheDeleteResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to delete cache \'test-cache\': "\n          + error.getErrorCode(),\n      error);\n}',kotlin:'when (val response = cacheClient.deleteCache("test-cache")) {\n    is CacheDeleteResponse.Success -> println("Cache \'test-cache\' deleted")\n    is CacheDeleteResponse.Error -> throw RuntimeException(\n        "An error occurred while attempting to delete cache \'test-cache\': ${response.errorCode}", response\n    )\n}',go:"_, err := client.DeleteCache(ctx, &momento.DeleteCacheRequest{\n\tCacheName: cacheName,\n})\nif err != nil {\n\tpanic(err)\n}",csharp:'var result = await cacheClient.DeleteCacheAsync("test-cache");\r\nif (result is DeleteCacheResponse.Success)\r\n{\r\n    Console.WriteLine("Cache \'test-cache\' deleted");\r\n}\r\nelse if (result is DeleteCacheResponse.Error error)\r\n{\r\n    throw new Exception($"An error occurred while attempting to delete cache \'test-cache\': {error.ErrorCode}: {error}");\r\n}\r',php:"\n$delete_cache_response = $cache_client->deleteCache('test-cache');\nif ($err = $delete_cache_response->asError()) {\n    print(\"An error occurred while attempting to delete 'test-cache': {$err->errorCode()} - {$err->message()}\\n\");\n} else {\n    print(\"Cache 'test-cache' deleted\\n\");\n}",rust:'  cache_client.delete_cache(cache_name).await?;\n  println!("Cache {} deleted", cache_name);',elixir:'case Momento.CacheClient.delete_cache(client, "test-cache") do\n  {:ok, _} ->\n    IO.puts("Cache \'test-cache\' deleted")\n\n  {:error, error} ->\n    IO.puts(\n      "An error occurred while attempting to delete cache \'test-cache\': #{error.error_code}"\n    )\n\n    raise error\nend',swift:'let result = await cacheClient.deleteCache(cacheName: cacheName)\nswitch result {\ncase .success(let success):\n    print("Successfully deleted the cache")\ncase .error(let err):\n    print("Unable to delete cache: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.deleteCache("test-cache");\nswitch (result) {\n  case DeleteCacheError():\n    print("Error deleting cache: $result");\n    exit(1);\n  case DeleteCacheSuccess():\n    print("Successfully deleted cache");\n}',ts:""}),"\n",(0,s.jsx)(n.h3,{id:"list-caches",children:"List caches"}),"\n",(0,s.jsx)(n.p,{children:"\u3059\u3079\u3066\u306ecache\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.listCaches();\nswitch (result.type) {\n  case ListCachesResponse.Success:\n    console.log(\n      `Caches:\\n${result\n        .getCaches()\n        .map(c => c.getName())\n        .join('\\n')}\\n\\n`\n    );\n    break;\n  case ListCachesResponse.Error:\n    throw new Error(`An error occurred while attempting to list caches: ${result.errorCode()}: ${result.toString()}`);\n}",python:'print("Listing caches:")\nlist_caches_response = await cache_client.list_caches()\nmatch list_caches_response:\n    case ListCaches.Success() as success:\n        for cache_info in success.caches:\n            print(f"- {cache_info.name!r}")\n    case ListCaches.Error() as error:\n        raise Exception(f"An error occurred while attempting to list caches: {error.message}")\n\n',java:'final CacheListResponse response = cacheClient.listCaches().join();\nif (response instanceof CacheListResponse.Success success) {\n  final String caches =\n      success.getCaches().stream().map(CacheInfo::name).collect(Collectors.joining("\\n"));\n  System.out.println("Caches:\\n" + caches);\n} else if (response instanceof CacheListResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to list caches: " + error.getErrorCode(), error);\n}',kotlin:'when (val response: CacheListResponse = cacheClient.listCaches()) {\n    is CacheListResponse.Success -> {\n        val caches: String = response.caches.joinToString("\\n") { cacheInfo -> cacheInfo.name }\n        println("Caches:\\n$caches")\n    }\n\n    is CacheListResponse.Error -> throw RuntimeException(\n        "An error occurred while attempting to list caches: ${response.errorCode}", response\n    )\n}',go:'resp, err := client.ListCaches(ctx, &momento.ListCachesRequest{})\nif err != nil {\n\tpanic(err)\n}\n\nswitch r := resp.(type) {\ncase *responses.ListCachesSuccess:\n\tlog.Printf("Found caches %+v\\n", r.Caches())\n}',csharp:'var result = await cacheClient.ListCachesAsync();\r\nif (result is ListCachesResponse.Success success)\r\n{\r\n    Console.WriteLine($"Caches:\\n{string.Join("\\n", success.Caches.Select(c => c.Name))}\\n\\n");\r\n}\r\nelse if (result is ListCachesResponse.Error error)\r\n{\r\n    throw new Exception($"An error occurred while attempting to list caches: {error.ErrorCode}: {error}");\r\n}\r',php:'\n$list_caches_response = $cache_client->listCaches();\nif ($caches = $list_caches_response->asSuccess()) {\n    print("Found caches:\\n");\n    foreach ($caches as $cache) {\n        $cache_name = $cache->name();\n        print("- $cache_name\\n");\n    }\n} elseif ($err = $list_caches_response->asError()) {\n    print("An error occurred while attempting to list caches: {$err->errorCode()} - {$err->message()}\\n");\n}',rust:'  let response = cache_client.list_caches().await?;\n  println!("Caches: {:#?}", response.caches);',elixir:'case Momento.CacheClient.list_caches(client) do\n  {:ok, result} ->\n    IO.puts("Caches:")\n    IO.inspect(result.caches)\n\n  {:error, error} ->\n    IO.puts("An error occurred while attempting to list caches: #{error.error_code}")\n    raise error\nend',swift:'let result = await cacheClient.listCaches()\nswitch result {\ncase .success(let success):\n    print("Successfully fetched list of caches: \\(success.caches.map { $0.name })")\ncase .error(let err):\n    print("Unable to fetch list of caches: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.listCaches();\nswitch (result) {\n  case ListCachesError():\n    print("Error listing caches: $result");\n  case ListCachesSuccess():\n    print("Successfully listed caches: ${result.cacheNames}");\n}',ts:""}),"\n",(0,s.jsx)(n.h3,{id:"flush-cache",children:"Flush cache"}),"\n",(0,s.jsx)(n.p,{children:"cache\u306e\u5168\u30c7\u30fc\u30bf\u3092\u30d5\u30e9\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u5c5e\u6027:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u30d5\u30e9\u30c3\u30b7\u30e5\u3059\u308bcache\u306e\u540d\u524d\u3002"})]})})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.flushCache(cacheName);\nswitch (result.type) {\n  case FlushCacheResponse.Success:\n    console.log(`Cache '${cacheName}' flushed`);\n    break;\n  case FlushCacheResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to flush cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:'final CacheFlushResponse response = cacheClient.flushCache("test-cache").join();\nif (response instanceof CacheFlushResponse.Success) {\n  System.out.println("Cache \'test-cache\' flushed");\n} else if (response instanceof CacheFlushResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to flush cache \'test-cache\': " + error.getErrorCode(),\n      error);\n}',kotlin:"",go:"",csharp:'var result = await cacheClient.FlushCacheAsync("test-cache");\r\nif (result is FlushCacheResponse.Success)\r\n{\r\n    Console.WriteLine("Cache \'test-cache\' flushed");\r\n}\r\nelse if (result is FlushCacheResponse.Error error)\r\n{\r\n    throw new Exception($"An error occurred while attempting to flush cache \'test-cache\': {error.ErrorCode}: {error}");\r\n}\r',php:"",rust:'  cache_client.flush_cache(cache_name.to_string()).await?;\n  println!("Cache {} flushed", cache_name);',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.p,{children:":::\u30d2\u30f3\u30c8"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"#delete-cache",children:"Delete Cache"}),"\u3001",(0,s.jsx)(n.a,{href:"#create-cache",children:"Create Cache"}),"\u306e\u9806\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u6a21\u5023\u3067\u304d\u307e\u3059\u304c\u3001FlushCache API\u306fcache\u306e\u8a2d\u5b9a\u3092\u4fdd\u6301\u3057\u305f\u307e\u307e\u3001\u30c7\u30fc\u30bf\u306e\u307f\u3092\u524a\u9664\u3057\u307e\u3059\u3002"]}),"\n",(0,s.jsx)(n.p,{children:":::"}),"\n",(0,s.jsx)(n.h2,{id:"\u30c7\u30fc\u30bfapi",children:"\u30c7\u30fc\u30bfAPI"}),"\n",(0,s.jsx)(n.p,{children:"\u3053\u308c\u3089\u306eAPI\u30e1\u30bd\u30c3\u30c9\u306f\u3001cache\u5185\u306e\u30c7\u30fc\u30bf\u3092\u76f4\u63a5\u64cd\u4f5c\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.h3,{id:"set",children:"Set"}),"\n",(0,s.jsx)(n.p,{children:"\u6307\u5b9a\u3055\u308c\u305f\u751f\u5b58\u6642\u9593(TTL)\u79d2\u306e\u5024\u3092cache\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3053\u306ekey\u306e\u5024\u304c\u3059\u3067\u306b\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u65b0\u3057\u3044\u5024\u3067\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"cache\u306e\u540d\u524d\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"[]Byte"}),(0,s.jsx)(n.td,{children:"\u5024\u3092\u8ffd\u52a0\u3059\u308bkey\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"value"}),(0,s.jsx)(n.td,{children:"[]Byte"}),(0,s.jsx)(n.td,{children:"\u683c\u7d0d\u3055\u308c\u308b\u5024\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ttlSeconds"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{children:"cache\u5185\u306e\u30a2\u30a4\u30c6\u30e0\u306eTTL\u3002"})]})]})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.set(cacheName, 'test-key', 'test-value');\nswitch (result.type) {\n  case CacheSetResponse.Success:\n    console.log(\"Key 'test-key' stored successfully\");\n    break;\n  case CacheSetResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to store key 'test-key' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:'set_response = await cache_client.set("test-cache", "test-key", "test-value")\nmatch set_response:\n    case CacheSet.Success():\n        print("Key \'test-key\' stored successfully")\n    case CacheSet.Error() as error:\n        raise Exception(\n            f"An error occurred while attempting to store key \'test-key\' in cache \'test-cache\': {error.message}"\n        )\n\n',java:'final SetResponse response = cacheClient.set("test-cache", "test-key", "test-value").join();\nif (response instanceof SetResponse.Success) {\n  System.out.println("Key \'test-key\' stored successfully");\n} else if (response instanceof SetResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to store key \'test-key\' in cache \'test-cache\': "\n          + error.getErrorCode(),\n      error);\n}',kotlin:'when (val response = cacheClient.set("test-cache", "test-key", "test-value")) {\n    is SetResponse.Success -> println("Key \'test-key\' stored successfully")\n    is SetResponse.Error -> throw RuntimeException(\n        "An error occurred while attempting to store key \'test-key\' in cache \'test-cache\': ${response.errorCode}",\n        response\n    )\n}',go:'key := uuid.NewString()\nvalue := uuid.NewString()\nlog.Printf("Setting key: %s, value: %s\\n", key, value)\n_, err := client.Set(ctx, &momento.SetRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String(key),\n\tValue:     momento.String(value),\n\tTtl:       time.Duration(9999),\n})\nif err != nil {\n\tvar momentoErr momento.MomentoError\n\tif errors.As(err, &momentoErr) {\n\t\tif momentoErr.Code() != momento.TimeoutError {\n\t\t\t// this would represent a client-side timeout, and you could fall back to your original data source\n\t\t} else {\n\t\t\tpanic(err)\n\t\t}\n\t}\n}',csharp:'var result = await cacheClient.SetAsync("test-cache", "test-key", "test-value");\r\nif (result is CacheSetResponse.Success)\r\n{\r\n    Console.WriteLine("Key \'test-key\' stored successfully");\r\n}\r\nelse if (result is CacheSetResponse.Error error)\r\n{\r\n    throw new Exception($"An error occurred while attempting to store key \'test-key\' in cache \'test-cache\': {error.ErrorCode}: {error}");\r\n}\r',php:'$set_response = $cache_client->set("test-cache", "test-key", "test-value");\nif ($set_response->asSuccess()) {\n    print("Key \'test-key\' stored successfully\\n");\n} elseif ($err = $set_response->asError()) {\n    print("An error occurred while attempting to store \'test-key\': {$err->errorCode()} - {$err->message()}\\n");\n}',rust:'  cache_client.set(cache_name, "key", "value").await?;\n  println!("Value stored");',elixir:'case Momento.CacheClient.set(client, "test-cache", "test-key", "test-value") do\n  {:ok, _} ->\n    IO.puts("Key \'test-key\' stored successfully")\n\n  {:error, error} ->\n    IO.puts(\n      "An error occurred while attempting to store key \'test-key\' in cache \'test-cache\': #{error.error_code}"\n    )\n\n    raise error\nend',swift:'let result = await cacheClient.set(\n    cacheName: cacheName,\n    key: "key",\n    value: "value"\n)\nswitch result {\ncase .success(_):\n    print("Successfully set item in the cache")\ncase .error(let err):\n    print("Unable to set item in the cache: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.set("test-cache", "test-key", "test-value");\nswitch (result) {\n  case SetError():\n    print("Error setting key: $result");\n    exit(1);\n  case SetSuccess():\n    print("Successfully set item in the cache");\n}',ts:""}),"\n",(0,s.jsx)(n.h3,{id:"setbatch",children:"SetBatch"}),"\n",(0,s.jsx)(n.p,{children:"\u8907\u6570\u306e\u30ad\u30fc\u3068\u5024\u306e\u30da\u30a2\u3092\u3001\u6307\u5b9a\u3055\u308c\u305fTTL\uff08Time To Live\uff09\u79d2\u6570\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30ad\u30fc\u306e\u5024\u304c\u3059\u3067\u306b\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u65b0\u3057\u3044\u5024\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u540d\u524d"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"items"}),(0,s.jsx)(n.td,{children:"{ String/[]Byte :  String/[]Byte }"}),(0,s.jsx)(n.td,{children:"\u683c\u7d0d\u3055\u308c\u308b\u3079\u304d\u30ad\u30fc\u3068\u5024\u306e\u30de\u30c3\u30d4\u30f3\u30b0"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ttlSeconds"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u3042\u308b\u30a2\u30a4\u30c6\u30e0\u306e\u305f\u3081\u306b\u751f\u304d\u308b\u6642\u9593"})]})]})]}),"\n",(0,s.jsx)(c.r,{js:"const values = new Map<string, string>([\n  ['abc', '123'],\n  ['xyz', '321'],\n  ['123', 'xyz'],\n  ['321', 'abc'],\n]);\nconst result = await cacheClient.setBatch(cacheName, values);\nswitch (result.type) {\n  case CacheSetBatchResponse.Success:\n    console.log('Keys and values stored successfully');\n    break;\n  case CacheSetBatchResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to batch set in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:'resp, err := client.SetBatch(ctx, &momento.SetBatchRequest{\n\tCacheName: cacheName,\n\tItems: []momento.BatchSetItem{\n\t\t{\n\t\t\tKey:   momento.String("key1"),\n\t\t\tValue: momento.String("value1"),\n\t\t},\n\t\t{\n\t\t\tKey:   momento.String("key2"),\n\t\t\tValue: momento.String("value2"),\n\t\t},\n\t},\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.SetBatchSuccess:\n\tlog.Printf("Successfully set keys in cache\\n")\n}',csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"\u30e1\u30bd\u30c3\u30c9\u30fb\u30ec\u30b9\u30dd\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Success"}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"results()"}),": CacheSet.Response[]"]}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]})]}),"\n",(0,s.jsx)(n.h3,{id:"get",children:"Get"}),"\n",(0,s.jsx)(n.p,{children:"\u6307\u5b9a\u3055\u308c\u305fkey\u306b\u5bfe\u3057\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u308bcache\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"cache\u306e\u540d\u524d\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"[]Byte"}),(0,s.jsx)(n.td,{children:"\u5024\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u6307\u5b9a\u3059\u308bkey\u3067\u3059\u3002"})]})]})]}),"\n",(0,s.jsx)(c.r,{js:"const getResponse = await cacheClient.get(cacheName, 'test-key');\n// simplified style; assume the value was found\nconsole.log(`cache hit: ${getResponse.value()!}`);\n\n// pattern-matching style; safer for production code\nswitch (getResponse.type) {\n  case CacheGetResponse.Hit:\n    console.log(`Retrieved value for key 'test-key': ${getResponse.valueString()}`);\n    break;\n  case CacheGetResponse.Miss:\n    console.log(`Key 'test-key' was not found in cache '${cacheName}'`);\n    break;\n  case CacheGetResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to get key 'test-key' from cache '${cacheName}': ${getResponse.errorCode()}: ${getResponse.toString()}`\n    );\n}",python:"get_response = await cache_client.get(\"test-cache\", \"test-key\")\nmatch get_response:\n    case CacheGet.Hit() as hit:\n        print(f\"Retrieved value for key 'test-key': {hit.value_string}\")\n    case CacheGet.Miss():\n        print(\"Key 'test-key' was not found in cache 'test-cache'\")\n    case CacheGet.Error() as error:\n        raise Exception(\n            f\"An error occurred while attempting to get key 'test-key' from cache 'test-cache': {error.message}\"\n        )\n\n",java:"final GetResponse response = cacheClient.get(\"test-cache\", \"test-key\").join();\nif (response instanceof GetResponse.Hit hit) {\n  System.out.println(\"Retrieved value for key 'test-key': \" + hit.valueString());\n} else if (response instanceof GetResponse.Miss) {\n  System.out.println(\"Key 'test-key' was not found in cache 'test-cache'\");\n} else if (response instanceof GetResponse.Error error) {\n  throw new RuntimeException(\n      \"An error occurred while attempting to get key 'test-key' from cache 'test-cache': \"\n          + error.getErrorCode(),\n      error);\n}",kotlin:"when (val response = cacheClient.get(\"test-cache\", \"test-key\")) {\n    is GetResponse.Hit -> println(\"Retrieved value for key 'test-key': ${response.value}\")\n    is GetResponse.Miss -> println(\"Key 'test-key' was not found in cache 'test-cache'\")\n    is GetResponse.Error -> throw RuntimeException(\n        \"An error occurred while attempting to get key 'test-key' from cache 'test-cache': ${response.errorCode}\",\n        response\n    )\n}",go:'key := uuid.NewString()\nresp, err := client.Get(ctx, &momento.GetRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String(key),\n})\nif err != nil {\n\tpanic(err)\n}\n\nswitch r := resp.(type) {\ncase *responses.GetHit:\n\tlog.Printf("Lookup resulted in cache HIT. value=%s\\n", r.ValueString())\ncase *responses.GetMiss:\n\tlog.Printf("Look up did not find a value key=%s\\n", key)\n}',csharp:"var result = await cacheClient.GetAsync(\"test-cache\", \"test-key\");\r\nif (result is CacheGetResponse.Hit hit)\r\n{\r\n    Console.WriteLine($\"Retrieved value for key 'test-key': {hit.ValueString}\");\r\n}\r\nelse if (result is CacheGetResponse.Miss)\r\n{\r\n    Console.WriteLine(\"Key 'test-key' was not found in cache 'test-cache'\");\r\n}\r\nelse if (result is CacheGetResponse.Error error)\r\n{\r\n    throw new Exception($\"An error occurred while attempting to get key 'test-key' from cache 'test-cache': {error.ErrorCode}: {error}\");\r\n}\r",php:"\n$get_response = $cache_client->get(\"test-cache\", \"test-key\");\nif ($hit = $get_response->asHit()) {\n    print(\"Retrieved value for key 'test-key': {$hit->valueString()}\\n\");\n} elseif ($get_response->asMiss()) {\n    print(\"Key 'test-key' was not found in cache 'test-cache'\\n\");\n} elseif ($err = $get_response->asError()) {\n    print(\"An error occurred while attempting to get key 'test-key' from cache 'test-cache': {$err->errorCode()} - {$err->message()}\\n\");\n}",rust:'  let response = cache_client.get(cache_name, "key").await?;\n  let _item: String = response.try_into().expect("I stored a string!");',elixir:"case Momento.CacheClient.get(client, \"test-cache\", \"test-key\") do\n  {:ok, hit} ->\n    IO.puts(\"Retrieved value for key 'test-key': #{hit.value}\")\n\n  :miss ->\n    IO.puts(\"Key 'test-key' was not found in cache 'test-cache'\")\n\n  {:error, error} ->\n    IO.puts(\n      \"An error occurred while attempting to get key 'test-key' from cache 'test-cache': #{error.error_code}\"\n    )\n\n    raise error\nend",swift:'let result = await cacheClient.get(\n    cacheName: cacheName,\n    key: "key"\n)\nswitch result {\ncase .hit(let hit):\n    print("Cache hit: \\(hit.valueString)")\ncase .miss(_):\n    print("Cache miss")\ncase .error(let err):\n    print("Unable to get item in the cache: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.get("test-cache", "test-key");\nswitch (result) {\n  case GetMiss():\n    print("Key was not found in cache.");\n  case GetError():\n    print("Error getting key: $result");\n  case GetHit():\n    print("Successfully got item from cache: ${result.value}");\n}',ts:""}),"\n",(0,s.jsx)(n.h3,{id:"getbatch",children:"GetBatch"}),"\n",(0,s.jsx)(n.p,{children:"\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306b\u5bfe\u5fdc\u3059\u308b\u30ad\u30e3\u30c3\u30b7\u30e5\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u540d\u524d"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"keys"}),(0,s.jsx)(n.td,{children:"String[] / Bytes[]"}),(0,s.jsx)(n.td,{children:"\u5024\u3092\u53d6\u5f97\u3059\u308b\u30ad\u30fc\u306e\u30ea\u30b9\u30c8"})]})]})]}),"\n",(0,s.jsx)(c.r,{js:"const keys = ['abc', 'xyz', '123', '321'];\nconst getBatchResponse = await cacheClient.getBatch(cacheName, keys);\n\n// simplified style; assume the value was found\nconst values = getBatchResponse.values()!;\nfor (const key of keys) {\n  console.log(`Retrieved value for key '${key}': ${values[key]}`);\n}\n\n// pattern-matching style; safer for production code\nswitch (getBatchResponse.type) {\n  case CacheGetBatchResponse.Success: {\n    const values = getBatchResponse.values();\n    for (const key of keys) {\n      console.log(`Retrieved value for key '${key}': ${values[key]}`);\n    }\n    break;\n  }\n  case CacheGetBatchResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to batch get in cache '${cacheName}': ${getBatchResponse.errorCode()}: ${getBatchResponse.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:'resp, err := client.GetBatch(ctx, &momento.GetBatchRequest{\n\tCacheName: cacheName,\n\tKeys:      []momento.Value{momento.String("key1"), momento.String("key2")},\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *responses.GetBatchSuccess:\n\tlog.Printf("Found values %+v\\n", r.ValueMap())\n}',csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"\u30e1\u30bd\u30c3\u30c9\u30fb\u30ec\u30b9\u30dd\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Success"}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"values()"}),": Record<string, string>"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"results()"}),": CacheGet.Response[]"]}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]})]}),"\n",(0,s.jsx)(n.h3,{id:"delete",children:"Delete"}),"\n",(0,s.jsx)(n.p,{children:"\u4e0e\u3048\u3089\u308c\u305fkey\u306b\u5bfe\u3057\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u308bcache\u5024\u3092\u524a\u9664\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"cache\u306e\u540d\u524d\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"[]Byte"}),(0,s.jsx)(n.td,{children:"\u5024\u3092\u524a\u9664\u3059\u308b\u305f\u3081\u306b\u6307\u5b9a\u3059\u308bkey\u3002"})]})]})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.delete(cacheName, 'test-key');\nswitch (result.type) {\n  case CacheDeleteResponse.Success:\n    console.log(\"Key 'test-key' deleted successfully\");\n    break;\n  case CacheDeleteResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to delete key 'test-key' from cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:'delete_response = await cache_client.delete("test-cache", "test-key")\nmatch delete_response:\n    case CacheDelete.Success():\n        print("Key \'test-key\' deleted successfully")\n    case CacheDelete.Error() as error:\n        raise Exception(\n            f"An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': {error.message}"\n        )\n\n',java:'final DeleteResponse response = cacheClient.delete("test-cache", "test-key").join();\nif (response instanceof DeleteResponse.Success) {\n  System.out.println("Key \'test-key\' deleted successfully");\n} else if (response instanceof DeleteResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': "\n          + error.getErrorCode(),\n      error);\n}',kotlin:'when (val response = cacheClient.delete("test-cache", "test-key")) {\n    is DeleteResponse.Success -> println("Key \'test-key\' deleted successfully")\n    is DeleteResponse.Error -> throw RuntimeException(\n        "An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': ${response.errorCode}",\n        response\n    )\n}',go:"key := uuid.NewString()\n_, err := client.Delete(ctx, &momento.DeleteRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String(key),\n})\nif err != nil {\n\tpanic(err)\n}",csharp:'var result = await cacheClient.DeleteAsync("test-cache", "test-key");\r\nif (result is CacheDeleteResponse.Success)\r\n{\r\n    Console.WriteLine("Key \'test-key\' deleted successfully");\r\n}\r\nelse if (result is CacheDeleteResponse.Error error)\r\n{\r\n    throw new Exception($"An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': {error.ErrorCode}: {error}");\r\n}\r',php:'$delete_response = $cache_client->delete("test-cache", "test-key");\nif ($delete_response->asSuccess()) {\n    print("Key \'test-key\' deleted successfully\\n");\n} elseif ($err = $delete_response->asError()) {\n    print("An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': {$err->errorCode()} - {$err->message()}\\n");\n}',rust:'  cache_client.delete(cache_name, "key").await?;\n  println!("Value deleted");',elixir:'case Momento.CacheClient.delete(client, "test-cache", "test-key") do\n  {:ok, _} ->\n    IO.puts("Key \'test-key\' deleted successfully")\n\n  {:error, error} ->\n    IO.puts(\n      "An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': #{error.error_code}"\n    )\n\n    raise error\nend',swift:'let result = await cacheClient.delete(\n    cacheName: cacheName,\n    key: "key"\n)\nswitch result {\ncase .success(_):\n    print("Successfully deleted item in the cache")\ncase .error(let err):\n    print("Unable to delete item in the cache: \\(err)")\n    exit(1)\n}',dart:'final result = await cacheClient.delete("test-cache", "test-key");\nswitch (result) {\n  case DeleteError():\n    print("Error deleting key: $result");\n    exit(1);\n  case DeleteSuccess():\n    print("Successfully deleted key from cache");\n}',ts:""}),"\n",(0,s.jsx)(n.h3,{id:"increment",children:"Increment"}),"\n",(0,s.jsx)(n.p,{children:"\u65e2\u5b58\u306e\u5024\u304c\u30d9\u30fc\u30b910(10\u9032\u6cd5)\u306e\u6574\u6570\u3092\u8868\u3059UTF-8\u6587\u5b57\u5217\u3067\u3042\u308b\u5834\u5408\u306b\u9650\u308a\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u3092\u8ffd\u52a0 \u3057\u307e\u3059\u3002\u3082\u3057\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u3066\u8a2d\u5b9a\u3057\u307e \u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"cache\u306e\u540d\u524d\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"field"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u5024\u306e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u5834\u5408\u306e\u5bfe\u8c61\u3068\u306a\u308bkey\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"amount"}),(0,s.jsx)(n.td,{children:"Integer"}),(0,s.jsx)(n.td,{children:"\u5024\u306b\u52a0\u7b97\u3059\u308b\u91cf\u3067\u3059\u3002\u6b63\u306e\u5024\u3001\u8ca0\u306e\u5024\u3001\u307e\u305f\u306f\u30bc\u30ed\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f1\u3002"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:":::\u6ce8\u8a18"}),"\n",(0,s.jsx)(n.p,{children:"\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3055\u308c\u305f\u5024\u306f\u3001-9223372036854775808\u304b\u30899223372036854775807\u306e\u9593\u3001\u3064\u307e\u308a64\u30d3\u30c3 \u30c8\u7b26\u53f7\u4ed8\u304d\u6574\u6570\u914d\u5217\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u30a8\u30e9\u30fc\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.p,{children:":::"}),"\n",(0,s.jsx)(c.r,{js:"await cacheClient.set(cacheName, 'test-key', '10');\nconst result = await cacheClient.increment(cacheName, 'test-key', 1);\nif (result instanceof CacheIncrement.Success) {\n  console.log(`Key 'test-key' incremented successfully. New value in key test-key: ${result.valueNumber()}`);\n} else if (result instanceof CacheIncrement.Error) {\n  throw new Error(\n    `An error occurred while attempting to increment the value of key 'test-key' from cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:'cacheClient.set("test-cache", "test-key", "10").join();\nfinal IncrementResponse response = cacheClient.increment("test-cache", "test-key", 1).join();\nif (response instanceof IncrementResponse.Success success) {\n  System.out.println(\n      "Key \'test-key\' incremented successfully. New value in key test-key: "\n          + success.valueNumber());\n} else if (response instanceof IncrementResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to increment the value of key \'test-key\' from cache \'test-cache\': "\n          + error.getErrorCode(),\n      error);\n}',kotlin:"",go:'resp, err := client.Increment(ctx, &momento.IncrementRequest{\n\tCacheName: cacheName,\n\tField:     momento.String("key"),\n\tAmount:    1,\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *responses.IncrementSuccess:\n\tlog.Printf("Incremented value is %d\\n", r.Value())\n}',csharp:"",php:"",rust:'  let response = cache_client.increment(cache_name, "key", 1).await?;\n  println!("Value incremented to {}", response.value);',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"ping",children:"Ping"}),"\n",(0,s.jsx)(n.p,{children:"\u30b5\u30fc\u30d0\u306bping\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\u3053\u306eAPI\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30b5\u30fc\u30d0\u306b\u6b63\u5e38\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f \u3081\u306e\u63a5\u7d9a\u6027\u306e\u30c1\u30a7\u30c3\u30af\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Success"}),"\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"itemgettype",children:"ItemGetType"}),"\n",(0,s.jsx)(n.p,{children:"\u4e0e\u3048\u3089\u308c\u305fkey\u306b\u5bfe\u3057\u3066\u3001\u5bfe\u5fdc\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u3001\u305d\u306e\u578b(SCALAR\u3001DICTIONARY\u3001LIST\u306a \u3069)\u3092\u8fd4\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"cache\u306e\u540d\u524d\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"String | Byte"}),(0,s.jsx)(n.td,{children:"item\u306e\u578b\u304c\u8fd4\u5374\u3055\u308c\u308b\u3079\u304dkey\u3002"})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cache hit"}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"\u578b()"}),": enum: SCALAR, DICTIONARY, SET, LIST, SORTED_SET"]}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cache miss"}),"\n",(0,s.jsx)(n.li,{children:"Cache error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.itemGetType(cacheName, 'test-key');\nif (result instanceof CacheItemGetType.Hit) {\n  console.log(`Item type retrieved successfully: ${ItemType[result.itemType()]}`);\n} else if (result instanceof CacheItemGetType.Miss) {\n  console.log(\"Key 'test-key' was not found in cache '${cacheName}'\");\n} else if (result instanceof CacheItemGetType.Error) {\n  throw new Error(\n    `An error occurred while attempting to get the type of key 'test-key' from cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:'resp, err := client.ItemGetType(ctx, &momento.ItemGetTypeRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String("key"),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *responses.ItemGetTypeHit:\n\tlog.Printf("Type of item is %v\\n", r.Type())\ncase *responses.ItemGetTypeMiss:\n\tlog.Printf("Item does not exist in cache\\n")\n}',csharp:"",php:"",rust:'  let _item_type: ItemType = cache_client\n      .item_get_type(cache_name, "key")\n      .await?\n      .try_into()\n      .expect("Expected an item type!");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"keyexists",children:"KeyExists"}),"\n",(0,s.jsx)(n.p,{children:"\u6307\u5b9a\u3055\u308c\u305fkey\u304ccache\u306b\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"cache\u306e\u540d\u524d\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"String | Byte"}),(0,s.jsx)(n.td,{children:"cache\u306b\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308bkey\u3002"})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Success"}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exists()"}),": Bool"]}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.keyExists(cacheName, 'test-key');\nif (result instanceof CacheKeyExists.Success) {\n  console.log(\"Does 'test-key' exists in the cache?\", result.exists());\n} else if (result instanceof CacheKeyExists.Error) {\n  throw new Error(\n    `An error occurred while attempting to call keyExists on key 'test-key' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:'  let result = cache_client.key_exists(cache_name, "key").await?;\n  if result.exists {\n      println!("Key exists!");\n  } else {\n      println!("Key does not exist!");\n  }',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"keysexist",children:"KeysExist"}),"\n",(0,s.jsx)(n.p,{children:"\u6307\u5b9a\u3055\u308c\u305fkey(\u8907\u6570)\u304ccache\u306b\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"cache\u306e\u540d\u524d\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"keys"}),(0,s.jsx)(n.td,{children:"String[] | Byte[]"}),(0,s.jsx)(n.td,{children:"cache\u306b\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308bkey(\u8907\u6570)\u3002"})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Success"}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exists()"}),": Bool[]"]}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.keysExist(cacheName, ['test-key1', 'test-key2']);\nif (result instanceof CacheKeysExist.Success) {\n  console.log(\"Do 'test-key1' and 'test-key2' exist in the cache?\", result.exists());\n} else if (result instanceof CacheKeysExist.Error) {\n  throw new Error(\n    `An error occurred while attempting to call keysExist on keys 'test-key1' and 'test-key2' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:'keys := []momento.Value{momento.String("key1"), momento.String("key2")}\nresp, err := client.KeysExist(ctx, &momento.KeysExistRequest{\n\tCacheName: cacheName,\n\tKeys:      keys,\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *responses.KeysExistSuccess:\n\tlog.Printf("Does each key exist in cache?\\n")\n\tfor _, exists := range r.Exists() {\n\t\tlog.Printf("key exists=%v\\n", exists)\n\t}\n}',csharp:"",php:"",rust:'  // Receive results as a HashMap\n  let result_map: HashMap<String, bool> = cache_client\n      .keys_exist(cache_name, vec!["key", "key1", "key2"])\n      .await?\n      .into();\n  println!("Do these keys exist? {:#?}", result_map);\n\n  // Or receive results as a Vec\n  let result_list: Vec<bool> = cache_client\n      .keys_exist(cache_name, vec!["key", "key1", "key2"])\n      .await?\n      .into();\n  println!("Do these keys exist? {:#?}", result_list);',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"setifabsent",children:"SetIfAbsent"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["SetIfPresent",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30c1\u30a7\u30c3\u30af\u30a2\u30f3\u30c9\u30bb\u30c3\u30c8 (CAS) API \u3092"}),"Set",(0,s.jsx)(n.code,{children:"\u3084"}),"Delete",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30b9\u30ab\u30e9\u30fc API \u3084\u975e CAS API \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u4e00\u8cab\u6027\u306e\u52d5\u4f5c\u304c\u5b9a\u7fa9\u3055\u308c\u307e\u305b\u3093\u3002\u4ee3\u308f\u308a\u306b"}),"SetIfAbsent",(0,s.jsx)(n.code,{children:"\u3092"}),"SetIfPresent` \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})}),"\n",(0,s.jsx)(n.p,{children:"\u30ad\u30fc\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u307e\u3060\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u30ad\u30fc\u3092\u4f7f\u7528\u3057\u3066\u3001\u6307\u5b9a\u3055\u308c\u305f\u5024\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u9805\u76ee\u306b\u95a2\u9023\u4ed8\u3051\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u540d\u524d"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u8a2d\u5b9a\u3055\u308c\u308b\u30ad\u30fc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"value"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u4fdd\u5b58\u3059\u308b\u5024"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ttlSeconds"}),(0,s.jsx)(n.td,{children:"Duration"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u751f\u5b58\u6642\u9593"})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Method response object"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stored"}),"\n",(0,s.jsx)(n.li,{children:"NotStored"}),"\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u8a73\u3057\u304f\u306f",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.setIfAbsent(cacheName, 'test-key', 'test-field');\nif (result instanceof CacheSetIfAbsent.Stored) {\n  console.log(\"Field 'test-field' set in key 'test-key'\");\n} else if (result instanceof CacheSetIfAbsent.NotStored) {\n  console.log(`Key 'test-key' already exists in cache ${cacheName}, so we did not overwrite it`);\n} else if (result instanceof CacheSetIfAbsent.Error) {\n  throw new Error(\n    `An error occurred while attempting to call setIfAbsent for the key 'test-key' in cache cacheName: ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:'resp, err := client.SetIfAbsent(ctx, &momento.SetIfAbsentRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String("key"),\n\tValue:     momento.String("value"),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.SetIfAbsentStored:\n\tlog.Printf("Successfully set key in cache\\n")\n}',csharp:"",php:"",rust:'  match cache_client\n      .set_if_absent(cache_name, "key", "value")\n      .await?\n  {\n      SetIfAbsentResponse::Stored => println!("Value stored"),\n      SetIfAbsentResponse::NotStored => println!("Value not stored"),\n  }',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"setifpresent",children:"SetIfPresent"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["SetIfPresent",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30c1\u30a7\u30c3\u30af\u30a2\u30f3\u30c9\u30bb\u30c3\u30c8 (CAS) API \u3092"}),"Set",(0,s.jsx)(n.code,{children:"\u3084"}),"Delete",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30b9\u30ab\u30e9\u30fc API \u3084\u975e CAS API \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u4e00\u8cab\u6027\u306e\u52d5\u4f5c\u304c\u5b9a\u7fa9\u3055\u308c\u307e\u305b\u3093\u3002\u4ee3\u308f\u308a\u306b"}),"SetIfAbsent",(0,s.jsx)(n.code,{children:"\u3092"}),"SetIfPresent` \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})}),"\n",(0,s.jsx)(n.p,{children:"\u6307\u5b9a\u3055\u308c\u305f\u30ad\u30fc\u304c\u65e2\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u5024\u3092\u6307\u5b9a\u3055\u308c\u305f\u30ad\u30fc\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u9805\u76ee\u306b\u95a2\u9023\u4ed8\u3051\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u540d\u524d"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u8a2d\u5b9a\u3055\u308c\u308b\u30ad\u30fc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"value"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u4fdd\u5b58\u3059\u308b\u5024"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ttlSeconds"}),(0,s.jsx)(n.td,{children:"Duration"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u751f\u5b58\u6642\u9593"})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Method response object"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stored"}),"\n",(0,s.jsx)(n.li,{children:"NotStored"}),"\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u8a73\u3057\u304f\u306f",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.setIfPresent(cacheName, 'test-key', 'test-field');\nif (result instanceof CacheSetIfPresent.Stored) {\n  console.log(\"Field 'test-field' set in key 'test-key'\");\n} else if (result instanceof CacheSetIfPresent.NotStored) {\n  console.log(`Key 'test-key' does not exist in cache ${cacheName}, so we did not set the field`);\n} else if (result instanceof CacheSetIfPresent.Error) {\n  throw new Error(\n    `An error occurred while attempting to call setIfPresent for the key 'test-key' in cache cacheName: ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:'resp, err := client.SetIfPresent(ctx, &momento.SetIfPresentRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String("key"),\n\tValue:     momento.String("value"),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.SetIfPresentStored:\n\tlog.Printf("Successfully set key in cache\\n")\n}',csharp:"",php:"",rust:'  match cache_client\n      .set_if_present(cache_name, "key", "value")\n      .await?\n  {\n      SetIfPresentResponse::Stored => println!("Value stored"),\n      SetIfPresentResponse::NotStored => println!("Value not stored"),\n  }',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"setifequal",children:"SetIfEqual"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["SetIfEqual",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30c1\u30a7\u30c3\u30af\u30a2\u30f3\u30c9\u30bb\u30c3\u30c8 (CAS) API \u3092"}),"Set",(0,s.jsx)(n.code,{children:"\u3084"}),"Delete",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30b9\u30ab\u30e9\u30fc API \u3084\u975e CAS API \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u4e00\u8cab\u6027\u306e\u306a\u3044\u52d5\u4f5c\u306b\u306a\u308a\u307e\u3059\u3002\u4ee3\u308f\u308a\u306b"}),"SetIfNotEqual",(0,s.jsx)(n.code,{children:"\u3092"}),"SetIfEqual` \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})}),"\n",(0,s.jsxs)(n.p,{children:["\u6307\u5b9a\u3055\u308c\u305f\u30ad\u30fc\u304c\u65e2\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306b\u5b58\u5728\u3057\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u5024\u304c ",(0,s.jsx)(n.code,{children:"equal"})," \u3067\u6307\u5b9a\u3055\u308c\u305f\u5024\u3068\u7b49\u3057\u3044\u5834\u5408\u306b\u3001\u6307\u5b9a\u3055\u308c\u305f\u5024\u3092\u6307\u5b9a\u3055\u308c\u305f\u30ad\u30fc\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30a4\u30c6\u30e0\u306b\u95a2\u9023\u4ed8\u3051\u308b\u3002"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u540d\u524d"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u8a2d\u5b9a\u3055\u308c\u308b\u30ad\u30fc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"value"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u4fdd\u5b58\u3059\u308b\u5024"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"equal"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u6bd4\u8f03\u3059\u308b\u5024"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ttlSeconds"}),(0,s.jsx)(n.td,{children:"Duration"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u751f\u5b58\u6642\u9593"})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Method response object"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stored"}),"\n",(0,s.jsx)(n.li,{children:"NotStored"}),"\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u8a73\u3057\u304f\u306f",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.setIfEqual(cacheName, 'test-key', 'test-field', 'value-to-check');\nif (result instanceof CacheSetIfEqual.Stored) {\n  console.log(\"Field 'test-field' set in key 'test-key'\");\n} else if (result instanceof CacheSetIfEqual.NotStored) {\n  console.log(\"Value of key 'test-key' does not equal 'value-to-check', so we did not set the field\");\n} else if (result instanceof CacheSetIfEqual.Error) {\n  throw new Error(\n    `An error occurred while attempting to call setIfEqual for the key 'test-key' in cache cacheName: ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:'resp, err := client.SetIfEqual(ctx, &momento.SetIfEqualRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String("key"),\n\tValue:     momento.String("value"),\n\tEqual:     momento.String("current-value"),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.SetIfEqualStored:\n\tlog.Printf("Successfully set key in cache\\n")\n}',csharp:"",php:"",rust:'  match cache_client\n      .set_if_equal(cache_name, "key", "new-value", "cached-value")\n      .await?\n  {\n      SetIfEqualResponse::Stored => println!("Value stored"),\n      SetIfEqualResponse::NotStored => println!("Value not stored"),\n  }',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"setifnotequal",children:"SetIfNotEqual"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["SetIfEqual",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30c1\u30a7\u30c3\u30af\u30a2\u30f3\u30c9\u30bb\u30c3\u30c8 (CAS) API \u3092"}),"Set",(0,s.jsx)(n.code,{children:"\u3084"}),"Delete",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30b9\u30ab\u30e9\u30fc API \u3084\u975e CAS API \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u4e00\u8cab\u6027\u306e\u306a\u3044\u52d5\u4f5c\u306b\u306a\u308a\u307e\u3059\u3002\u4ee3\u308f\u308a\u306b"}),"SetIfNotEqual",(0,s.jsx)(n.code,{children:"\u3092"}),"SetIfEqual` \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})}),"\n",(0,s.jsxs)(n.p,{children:["\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306b\u5b58\u5728\u3057\u306a\u3044\u304b\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u5024\u304c ",(0,s.jsx)(n.code,{children:"notEqual"})," \u3067\u6307\u5b9a\u3057\u305f\u5024\u3068\u7b49\u3057\u304f\u306a\u3044\u5834\u5408\u306b\u3001\u6307\u5b9a\u3057\u305f\u5024\u3092\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30a4\u30c6\u30e0\u306b\u95a2\u9023\u4ed8\u3051\u308b\u3002"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u540d\u524d"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u8a2d\u5b9a\u3055\u308c\u308b\u30ad\u30fc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"value"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u4fdd\u5b58\u3059\u308b\u5024"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"notEqual"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u6bd4\u8f03\u3059\u308b\u5024"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ttlSeconds"}),(0,s.jsx)(n.td,{children:"Duration"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u751f\u5b58\u6642\u9593"})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Method response object"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stored"}),"\n",(0,s.jsx)(n.li,{children:"NotStored"}),"\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u8a73\u3057\u304f\u306f",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.setIfNotEqual(cacheName, 'test-key', 'test-field', 'value-to-check');\nif (result instanceof CacheSetIfNotEqual.Stored) {\n  console.log(\"Field 'test-field' set in key 'test-key'\");\n} else if (result instanceof CacheSetIfNotEqual.NotStored) {\n  console.log(\"Value of key 'test-key' equals 'value-to-check', so we did not set the field\");\n} else if (result instanceof CacheSetIfNotEqual.Error) {\n  throw new Error(\n    `An error occurred while attempting to call setIfNotEqual for the key 'test-key' in cache cacheName: ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:'resp, err := client.SetIfNotEqual(ctx, &momento.SetIfNotEqualRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String("key"),\n\tValue:     momento.String("value"),\n\tNotEqual:  momento.String("current-value"),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.SetIfNotEqualStored:\n\tlog.Printf("Successfully set key in cache\\n")\n}',csharp:"",php:"",rust:'  match cache_client\n      .set_if_not_equal(cache_name, "key", "new-value", "cached-value")\n      .await?\n  {\n      SetIfNotEqualResponse::Stored => println!("Value stored"),\n      SetIfNotEqualResponse::NotStored => println!("Value not stored"),\n  }',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"setifpresentandnotequal",children:"SetIfPresentAndNotEqual"}),"\n",(0,s.jsx)(n.div,{}),"\n",(0,s.jsxs)(n.p,{children:["SetIfPresentAndNotEqual",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30c1\u30a7\u30c3\u30af\u30a2\u30f3\u30c9\u30bb\u30c3\u30c8 (CAS) API \u3092"}),"Set",(0,s.jsx)(n.code,{children:"\u3084"}),"Delete",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30b9\u30ab\u30e9\u30fc API \u3084\u975e CAS API \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u305d\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u3059\u308b\u3068\u3001\u4e00\u8cab\u6027\u306e\u52d5\u4f5c\u304c\u672a\u5b9a\u7fa9\u306b\u306a\u308a\u307e\u3059\u3002\u4ee3\u308f\u308a\u306b"}),"SetIfAbsentOrEqual",(0,s.jsx)(n.code,{children:" "}),"SetIfPresentAndNotEqual` \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n:::"]}),"\n",(0,s.jsxs)(n.p,{children:["\u6307\u5b9a\u3055\u308c\u305f\u30ad\u30fc\u304c\u65e2\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306b\u5b58\u5728\u3057\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u5024\u304c ",(0,s.jsx)(n.code,{children:"notEqual"})," \u3067\u6307\u5b9a\u3055\u308c\u305f\u5024\u3068\u7b49\u3057\u304f\u306a\u3044\u5834\u5408\u306b\u3001\u6307\u5b9a\u3055\u308c\u305f\u5024\u3092\u6307\u5b9a\u3055\u308c\u305f\u30ad\u30fc\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30a4\u30c6\u30e0\u306b\u95a2\u9023\u4ed8\u3051\u308b\u3002"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u540d\u524d"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u8a2d\u5b9a\u3055\u308c\u308b\u30ad\u30fc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"value"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u4fdd\u5b58\u3059\u308b\u5024"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"notEqual"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u6bd4\u8f03\u3059\u308b\u5024"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ttlSeconds"}),(0,s.jsx)(n.td,{children:"Duration"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u751f\u5b58\u6642\u9593"})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Method response object"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stored"}),"\n",(0,s.jsx)(n.li,{children:"NotStored"}),"\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u8a73\u3057\u304f\u306f",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.setIfPresentAndNotEqual(cacheName, 'test-key', 'test-field', 'value-to-check');\nif (result instanceof CacheSetIfPresentAndNotEqual.Stored) {\n  console.log(\"Field 'test-field' set in key 'test-key'\");\n} else if (result instanceof CacheSetIfPresentAndNotEqual.NotStored) {\n  console.log(\n    `Key 'test-key' does not exist in cache ${cacheName} or equals 'value-to-check', so we did not set the field`\n  );\n} else if (result instanceof CacheSetIfPresentAndNotEqual.Error) {\n  throw new Error(\n    `An error occurred while attempting to call setIfPresentAndNotEqual for the key 'test-key' in cache cacheName: ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:'resp, err := client.SetIfPresentAndNotEqual(ctx, &momento.SetIfPresentAndNotEqualRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String("key"),\n\tValue:     momento.String("value"),\n\tNotEqual:  momento.String("current-value"),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.SetIfPresentAndNotEqualStored:\n\tlog.Printf("Successfully set key in cache\\n")\n}',csharp:"",php:"",rust:'  match cache_client\n      .set_if_present_and_not_equal(cache_name, "key", "new-value", "cached-value")\n      .await?\n  {\n      SetIfPresentAndNotEqualResponse::Stored => println!("Value stored"),\n      SetIfPresentAndNotEqualResponse::NotStored => println!("Value not stored"),\n  }',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"setifabsentorequal",children:"SetIfAbsentOrEqual"}),"\n",(0,s.jsxs)(n.p,{children:["::\u8b66\u544a\nSetIfAbsentOrEqual",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30c1\u30a7\u30c3\u30af\u30a2\u30f3\u30c9\u30bb\u30c3\u30c8 (CAS) API \u3092"}),"Set",(0,s.jsx)(n.code,{children:"\u3084"}),"Delete",(0,s.jsx)(n.code,{children:"\u306e\u3088\u3046\u306a\u30b9\u30ab\u30e9\u30fc API \u3084\u975e CAS API \u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u305d\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u3059\u308b\u3068\u3001\u4e00\u8cab\u6027\u306e\u52d5\u4f5c\u304c\u672a\u5b9a\u7fa9\u306b\u306a\u308a\u307e\u3059\u3002\u4ee3\u308f\u308a\u306b"}),"SetIfAbsentOrEqual",(0,s.jsx)(n.code,{children:" \u3068\u4e00\u7dd2"}),"SetIfPresentAndNotEqual` \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n:::"]}),"\n",(0,s.jsxs)(n.p,{children:["\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306b\u5b58\u5728\u3057\u306a\u3044\u304b\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u5024\u304c ",(0,s.jsx)(n.code,{children:"equal"})," \u3067\u6307\u5b9a\u3057\u305f\u5024\u3068\u7b49\u3057\u3044\u5834\u5408\u306b\u3001\u6307\u5b9a\u3057\u305f\u5024\u3092\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30a4\u30c6\u30e0\u306b\u95a2\u9023\u4ed8\u3051\u308b\u3002"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u540d\u524d"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u8a2d\u5b9a\u3055\u308c\u308b\u30ad\u30fc"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"value"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u4fdd\u5b58\u3059\u308b\u5024"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"equal"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u6bd4\u8f03\u3059\u308b\u5024"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ttlSeconds"}),(0,s.jsx)(n.td,{children:"Duration"}),(0,s.jsx)(n.td,{children:"\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u30a2\u30a4\u30c6\u30e0\u306e\u751f\u5b58\u6642\u9593"})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Method response object"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stored"}),"\n",(0,s.jsx)(n.li,{children:"NotStored"}),"\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u8a73\u3057\u304f\u306f",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"const result = await cacheClient.setIfAbsentOrEqual(cacheName, 'test-key', 'test-field', 'value-to-check');\nif (result instanceof CacheSetIfAbsentOrEqual.Stored) {\n  console.log(\"Field 'test-field' set in key 'test-key'\");\n} else if (result instanceof CacheSetIfAbsentOrEqual.NotStored) {\n  console.log(\n    `Key 'test-key' exists in cache ${cacheName} and is not equal to 'value-to-check', so we did not set the field`\n  );\n} else if (result instanceof CacheSetIfAbsentOrEqual.Error) {\n  throw new Error(\n    `An error occurred while attempting to call setIfAbsentOrEqual for the key 'test-key' in cache cacheName: ${result.errorCode()}: ${result.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:'resp, err := client.SetIfAbsentOrEqual(ctx, &momento.SetIfAbsentOrEqualRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String("key"),\n\tValue:     momento.String("value"),\n\tEqual:     momento.String("current-value"),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.SetIfAbsentOrEqualStored:\n\tlog.Printf("Successfully set key in cache\\n")\n}',csharp:"",php:"",rust:'  match cache_client\n      .set_if_absent_or_equal(cache_name, "key", "new-value", "cached-value")\n      .await?\n  {\n      SetIfAbsentOrEqualResponse::Stored => println!("Value stored"),\n      SetIfAbsentOrEqualResponse::NotStored => println!("Value not stored"),\n  }',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h2,{id:"\u751f\u5b58\u6642\u9593ttlapi",children:"\u751f\u5b58\u6642\u9593(TTL)API"}),"\n",(0,s.jsx)(n.p,{children:"\u3053\u308c\u3089\u306eAPI\u306f\u3001\u3059\u3079\u3066\u306e\u578b\u306ecache\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.h3,{id:"updatettl",children:"UpdateTtl"}),"\n",(0,s.jsx)(n.p,{children:"cache\u30a2\u30a4\u30c6\u30e0\u306eTTL\u3092\u3001\u6307\u5b9a\u3055\u308c\u305f\u5024(\u79d2)\u3067\u4e0a\u66f8\u304d\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"cache\u306e\u540d\u524d\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u5024\u306eTTL\u3092\u4e0a\u66f8\u304d\u3059\u308b\u5bfe\u8c61\u306ekey\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ttl"}),(0,s.jsx)(n.td,{children:"Duration"}),(0,s.jsx)(n.td,{children:"cache\u3067\u4e0a\u66f8\u304d\u3057\u305f\u3044TTL\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002"})]})]})]}),"\n",(0,s.jsx)(c.r,{js:"",python:"",java:"",kotlin:"",go:'resp, err := client.UpdateTtl(ctx, &momento.UpdateTtlRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String("key"),\n\tTtl:       time.Duration(9999),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.UpdateTtlSet:\n\tlog.Printf("Successfully updated TTL for key\\n")\ncase *responses.UpdateTtlMiss:\n\tlog.Printf("Key does not exist in cache\\n")\n}',csharp:"",php:"",rust:'  match cache_client\n      .update_ttl(cache_name, "key", Duration::from_secs(10))\n      .await?\n  {\n      UpdateTtlResponse::Set => println!("TTL updated"),\n      UpdateTtlResponse::Miss => println!("Cache miss, unable to find key to update TTL"),\n  };',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"increasettl",children:"IncreaseTtl"}),"\n",(0,s.jsx)(n.p,{children:"TTL\u3092\u5897\u52a0\u3055\u305b\u308b\u5834\u5408\u306e\u307f\u3001key\u306eTTL\u79d2\u6570\u3092\u6307\u5b9a\u3055\u308c\u305f\u5024\u306b\u5897\u3084\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u4f8b"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"TTL\u304c5\u79d2\u3067\u30016\u79d2\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u65b0\u3057\u3044TTL\u306f6\u79d2\u306b\u306a\u308a\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.li,{children:"TTL\u304c5\u79d2\u3067\u30013\u79d2\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001TTL\u306f\u5897\u52a0\u3057\u307e\u305b\u3093\u3002\n| \u540d\u524d      | \u578b   | \u8aac\u660e                                     |\n| --------- | ------ | ----------------------------------------------- |\n| cacheName | String | cache\u306e\u540d\u524d\u3002                           |                              |\n| key       | String | Bytes | \u5024\u306eTTL\u3092\u5897\u52a0\u3055\u305b\u308bkey\u306e\u6307\u5b9a\u3002 |\n| ttl       | Duration | \u5897\u52a0\u3057\u305f\u3044TTL\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 |"}),"\n"]}),"\n",(0,s.jsx)(c.r,{js:"",python:"",java:"",kotlin:"",go:'resp, err := client.IncreaseTtl(ctx, &momento.IncreaseTtlRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String("key"),\n\tTtl:       time.Duration(9999),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.IncreaseTtlSet:\n\tlog.Printf("Successfully increased TTL for key\\n")\ncase *responses.IncreaseTtlMiss:\n\tlog.Printf("Key does not exist in cache\\n")\n}',csharp:"",php:"",rust:'  match cache_client\n      .increase_ttl(cache_name, "key", Duration::from_secs(5))\n      .await?\n  {\n      IncreaseTtlResponse::Set => println!("TTL updated"),\n      IncreaseTtlResponse::NotSet => println!("unable to increase TTL"),\n      IncreaseTtlResponse::Miss => println!("Cache miss, unable to find key to increase TTL"),\n  };',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"decreasettl",children:"DecreaseTtl"}),"\n",(0,s.jsx)(n.p,{children:"TTL\u3092\u6e1b\u5c11\u3055\u305b\u308b\u5834\u5408\u306e\u307f\u3001key\u306eTTL\u79d2\u6570\u3092\u6307\u5b9a\u3055\u308c\u305f\u5024\u306b\u6e1b\u3089\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u4f8b"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"TTL\u304c5\u79d2\u3067\u30013\u79d2\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u65b0\u3057\u3044TTL\u306f3\u79d2\u306b\u306a\u308a\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.li,{children:"TTL\u304c5\u79d2\u3067\u30016\u79d2\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001TTL\u306f\u6e1b\u5c11\u3057\u307e\u305b\u3093\u3002"}),"\n"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"cache\u306e\u540d\u524d\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"String | Bytes"}),(0,s.jsx)(n.td,{children:"\u5024\u306eTTL\u3092\u6e1b\u5c11\u3055\u305b\u308bkey\u306e\u6307\u5b9a\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ttl"}),(0,s.jsx)(n.td,{children:"Duration"}),(0,s.jsx)(n.td,{children:"\u6e1b\u5c11\u3055\u305b\u305f\u3044TTL\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002"})]})]})]}),"\n",(0,s.jsx)(c.r,{js:"",python:"",java:"",kotlin:"",go:'resp, err := client.DecreaseTtl(ctx, &momento.DecreaseTtlRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String("key"),\n\tTtl:       time.Duration(9999),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch resp.(type) {\ncase *responses.DecreaseTtlSet:\n\tlog.Printf("Successfully decreased TTL for key\\n")\ncase *responses.DecreaseTtlMiss:\n\tlog.Printf("Key does not exist in cache\\n")\n}',csharp:"",php:"",rust:'  match cache_client\n      .decrease_ttl(cache_name, "key", Duration::from_secs(3))\n      .await?\n  {\n      DecreaseTtlResponse::Set => println!("TTL updated"),\n      DecreaseTtlResponse::NotSet => println!("unable to decrease TTL"),\n      DecreaseTtlResponse::Miss => println!("Cache miss, unable to find key to decrease TTL"),\n  };',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"itemgetttl",children:"ItemGetTtl"}),"\n",(0,s.jsx)(n.p,{children:"\u4e0e\u3048\u3089\u308c\u305fkey\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u30a2\u30a4\u30c6\u30e0\u304ccache\u304b\u3089\u5931\u52b9\u3059\u308b\u307e\u3067\u306e\u751f\u5b58\u6642\u9593(TTL)\u3092\u8fd4\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cacheName"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsx)(n.td,{children:"cache\u306e\u540d\u524d\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"key"}),(0,s.jsx)(n.td,{children:"String | Byte"}),(0,s.jsx)(n.td,{children:"\u30a2\u30a4\u30c6\u30e0\u306e\u578b\u3092\u8fd4\u3059key\u306e\u6307\u5b9a\u3002"})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cache hit"}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"remainingTtl()"}),": Duration"]}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cache miss"}),"\n",(0,s.jsx)(n.li,{children:"Cache error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"",python:"",java:"",kotlin:"",go:'resp, err := client.ItemGetTtl(ctx, &momento.ItemGetTtlRequest{\n\tCacheName: cacheName,\n\tKey:       momento.String("key"),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *responses.ItemGetTtlHit:\n\tlog.Printf("TTL for key is %d\\n", r.RemainingTtl().Milliseconds())\ncase *responses.ItemGetTtlMiss:\n\tlog.Printf("Key does not exist in cache\\n")\n}',csharp:"",php:"",rust:'  let _remaining_ttl: Duration = cache_client\n      .item_get_ttl(cache_name, "key")\n      .await?\n      .try_into()\n      .expect("Expected an item ttl!");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h2,{id:"\u8a8d\u8a3capi",children:"\u8a8d\u8a3cAPI"}),"\n",(0,s.jsx)(n.p,{children:"\u3053\u308c\u3089\u306eAPI\u306f\u3001Momento\u306e\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3084\u30a2\u30af\u30bb\u30b9\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.h3,{id:"generateapikey",children:"GenerateApiKey"}),"\n",(0,s.jsx)(n.p,{children:"\u6307\u5b9a\u3057\u305f\u6a29\u9650\u3068\u6709\u52b9\u671f\u9650\u3092\u6301\u3064\u65b0\u3057\u3044Momento\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3092\u751f\u6210\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"scope"}),(0,s.jsx)(n.td,{children:"TokenScope"}),(0,s.jsx)(n.td,{children:"\u65b0\u3057\u3044\u30c8\u30fc\u30af\u30f3\u306b\u4ed8\u4e0e\u3059\u308b\u6a29\u9650\u3067\u3059\u3002\u3042\u3089\u304b\u3058\u3081\u69cb\u7bc9\u3055\u308c\u305fTokenScope \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001SDK\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"expiresIn"}),(0,s.jsx)(n.td,{children:"ExpiresIn"}),(0,s.jsxs)(n.td,{children:["\u30c8\u30fc\u30af\u30f3\u304c\u671f\u9650\u5207\u308c\u306b\u306a\u308b\u307e\u3067\u306e\u79d2\u6570\u3001\u307e\u305f\u306f",(0,s.jsx)(n.code,{children:"never"}),"\u306e\u6307\u5b9a\u3002"]})]})]})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Success"}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"authToken"}),": string - the new auth token"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"refreshToken"}),": string - a refresh token that can be used with the ",(0,s.jsx)(n.code,{children:"RefreshApiKey"})," API to refresh the token before it expires"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"expiresAt"}),": Timestamp - the timestamp at which the token will expire"]}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"// Generate a token that allows all data plane APIs on all caches and topics.\nconst allDataRWTokenResponse = await authClient.generateApiKey(AllDataReadWrite, ExpiresIn.minutes(30));\nif (allDataRWTokenResponse instanceof GenerateApiKey.Success) {\n  console.log('Generated an API key with AllDataReadWrite scope!');\n  // logging only a substring of the tokens, because logging security credentials is not advisable :)\n  console.log(`API key starts with: ${allDataRWTokenResponse.apiKey.substring(0, 10)}`);\n  console.log(`Refresh token starts with: ${allDataRWTokenResponse.refreshToken.substring(0, 10)}`);\n  console.log(`Expires At: ${allDataRWTokenResponse.expiresAt.epoch()}`);\n} else if (allDataRWTokenResponse instanceof GenerateApiKey.Error) {\n  throw new Error(\n    `An error occurred while attempting to call generateApiKey with AllDataReadWrite scope: ${allDataRWTokenResponse.errorCode()}: ${allDataRWTokenResponse.toString()}`\n  );\n}\n\n// Generate a token that can only call read-only data plane APIs on a specific cache foo. No topic apis (publish/subscribe) are allowed.\nconst singleCacheROTokenResponse = await authClient.generateApiKey(\n  TokenScopes.cacheReadOnly('foo'),\n  ExpiresIn.minutes(30)\n);\nif (singleCacheROTokenResponse instanceof GenerateApiKey.Success) {\n  console.log('Generated an API key with read-only access to cache foo!');\n  // logging only a substring of the tokens, because logging security credentials is not advisable :)\n  console.log(`API key starts with: ${singleCacheROTokenResponse.apiKey.substring(0, 10)}`);\n  console.log(`Refresh token starts with: ${singleCacheROTokenResponse.refreshToken.substring(0, 10)}`);\n  console.log(`Expires At: ${singleCacheROTokenResponse.expiresAt.epoch()}`);\n} else if (singleCacheROTokenResponse instanceof GenerateApiKey.Error) {\n  throw new Error(\n    `An error occurred while attempting to call generateApiKey with single cache read-only scope: ${singleCacheROTokenResponse.errorCode()}: ${singleCacheROTokenResponse.toString()}`\n  );\n}\n\n// Generate a token that can call all data plane APIs on all caches. No topic apis (publish/subscribe) are allowed.\nconst allCachesRWTokenResponse = await authClient.generateApiKey(\n  TokenScopes.cacheReadWrite(AllCaches),\n  ExpiresIn.minutes(30)\n);\nif (allCachesRWTokenResponse instanceof GenerateApiKey.Success) {\n  console.log('Generated an API key with read-write access to all caches!');\n  // logging only a substring of the tokens, because logging security credentials is not advisable :)\n  console.log(`API key starts with: ${allCachesRWTokenResponse.apiKey.substring(0, 10)}`);\n  console.log(`Refresh token starts with: ${allCachesRWTokenResponse.refreshToken.substring(0, 10)}`);\n  console.log(`Expires At: ${allCachesRWTokenResponse.expiresAt.epoch()}`);\n} else if (allCachesRWTokenResponse instanceof GenerateApiKey.Error) {\n  throw new Error(\n    `An error occurred while attempting to call generateApiKey with all caches read-write scope: ${allCachesRWTokenResponse.errorCode()}: ${allCachesRWTokenResponse.toString()}`\n  );\n}\n\n// Generate a token that can call publish and subscribe on all topics within cache bar\nconst singleCacheAllTopicsRWTokenResponse = await authClient.generateApiKey(\n  TokenScopes.topicPublishSubscribe({name: 'bar'}, AllTopics),\n  ExpiresIn.minutes(30)\n);\nif (singleCacheAllTopicsRWTokenResponse instanceof GenerateApiKey.Success) {\n  console.log('Generated an API key with publish-subscribe access to all topics within cache bar!');\n  // logging only a substring of the tokens, because logging security credentials is not advisable :)\n  console.log(`API key starts with: ${singleCacheAllTopicsRWTokenResponse.apiKey.substring(0, 10)}`);\n  console.log(`Refresh token starts with: ${singleCacheAllTopicsRWTokenResponse.refreshToken.substring(0, 10)}`);\n  console.log(`Expires At: ${singleCacheAllTopicsRWTokenResponse.expiresAt.epoch()}`);\n} else if (singleCacheAllTopicsRWTokenResponse instanceof GenerateApiKey.Error) {\n  throw new Error(\n    `An error occurred while attempting to call generateApiKey with read-write scope for all topics in a single cache: ${singleCacheAllTopicsRWTokenResponse.errorCode()}: ${singleCacheAllTopicsRWTokenResponse.toString()}`\n  );\n}\n\n// Generate a token that can only call subscribe on topic where_is_mo within cache mo_nuts\nconst oneCacheOneTopicRWTokenResponse = await authClient.generateApiKey(\n  TokenScopes.topicSubscribeOnly('mo_nuts', 'where_is_mo'),\n  ExpiresIn.minutes(30)\n);\nif (oneCacheOneTopicRWTokenResponse instanceof GenerateApiKey.Success) {\n  console.log('Generated an API key with subscribe-only access to topic where_is_mo within cache mo_nuts!');\n  // logging only a substring of the tokens, because logging security credentials is not advisable :)\n  console.log(`API key starts with: ${oneCacheOneTopicRWTokenResponse.apiKey.substring(0, 10)}`);\n  console.log(`Refresh token starts with: ${oneCacheOneTopicRWTokenResponse.refreshToken.substring(0, 10)}`);\n  console.log(`Expires At: ${oneCacheOneTopicRWTokenResponse.expiresAt.epoch()}`);\n} else if (oneCacheOneTopicRWTokenResponse instanceof GenerateApiKey.Error) {\n  throw new Error(\n    `An error occurred while attempting to call generateApiKey with read-write scope for single topic in a single cache: ${oneCacheOneTopicRWTokenResponse.errorCode()}: ${oneCacheOneTopicRWTokenResponse.toString()}`\n  );\n}\n\n// Generate a token with multiple permissions\nconst cachePermission1 = {\n  role: CacheRole.ReadWrite, // Managed role that grants access to read as well as write apis on caches\n  cache: 'acorns', // Scopes the access to a single cache named 'acorns'\n};\nconst cachePermission2 = {\n  role: CacheRole.ReadOnly, // Managed role that grants access to only read data apis on caches\n  cache: AllCaches, // Built-in value for access to all caches in the account\n};\nconst topicPermission1 = {\n  role: TopicRole.PublishSubscribe, // Managed role that grants access to subscribe as well as publish apis\n  cache: 'walnuts', // Scopes the access to a single cache named 'walnuts'\n  topic: 'mo_favorites', // Scopes the access to a single topic named 'mo_favorites' within cache 'walnuts'\n};\nconst topicPermission2 = {\n  role: TopicRole.SubscribeOnly, // Managed role that grants access to only subscribe api\n  cache: AllCaches, // Built-in value for all cache(s) in the account.\n  topic: AllTopics, // Built-in value for access to all topics in the listed cache(s).\n};\n\nconst permissions = {\n  permissions: [cachePermission1, cachePermission2, topicPermission1, topicPermission2],\n};\n\nconst multiplePermsTokenResponse = await authClient.generateApiKey(permissions, ExpiresIn.minutes(30));\nif (multiplePermsTokenResponse instanceof GenerateApiKey.Success) {\n  console.log('Generated an API key with multiple cache and topic permissions!');\n  // logging only a substring of the tokens, because logging security credentials is not advisable :)\n  console.log(`API key starts with: ${multiplePermsTokenResponse.apiKey.substring(0, 10)}`);\n  console.log(`Refresh token starts with: ${multiplePermsTokenResponse.refreshToken.substring(0, 10)}`);\n  console.log(`Expires At: ${multiplePermsTokenResponse.expiresAt.epoch()}`);\n} else if (multiplePermsTokenResponse instanceof GenerateApiKey.Error) {\n  throw new Error(\n    `An error occurred while attempting to call generateApiKey with multiple permissions: ${multiplePermsTokenResponse.errorCode()}: ${multiplePermsTokenResponse.toString()}`\n  );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"refreshapikey",children:"RefreshApiKey"}),"\n",(0,s.jsx)(n.p,{children:"\u65e2\u5b58\u306e\u6709\u52b9\u671f\u9650\u5185\u306eMomento\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u5143\u306e\u30c8\u30fc\u30af\u30f3\u3068\u540c\u3058\u6a29\u9650\u3068\u6709\u52b9\u671f\u9650\u3092\u6301\u3064 \u65b0\u3057\u3044\u30c8\u30fc\u30af\u30f3\u3092\u751f\u6210\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u540d\u524d"}),(0,s.jsx)(n.th,{children:"\u578b"}),(0,s.jsx)(n.th,{children:"\u8aac\u660e"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"refreshToken"}),(0,s.jsx)(n.td,{children:"String"}),(0,s.jsxs)(n.td,{children:["\u6700\u521d\u306e",(0,s.jsx)(n.code,{children:"GenerateApiKey"}),"\u306e\u547c\u3073\u51fa\u3057\u304b\u3089\u53d6\u5f97\u3057\u305f\u3001\u73fe\u5728\u306e\u8a8d\u8a3c\u30c8\u30fc \u30af\u30f3\u306erefreshToken\u3092\u6307\u5b9a\u3002"]})]})})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"\u30e1\u30bd\u30c3\u30c9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Success"}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"authToken"}),": string - the new auth token"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"refreshToken"}),": string - a refresh token that can be used with the ",(0,s.jsx)(n.code,{children:"RefreshApiKey"})," API to refresh the token before it expires"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"expiresAt"}),": Timestamp - the timestamp at which the token will expire"]}),"\n"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Error"}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u5177\u4f53\u7684\u306a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001",(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/response-objects",children:"\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"}),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})]}),"\n",(0,s.jsx)(c.r,{js:"const generateTokenResponse = await authClient.generateApiKey(AllDataReadWrite, ExpiresIn.minutes(30));\nif (generateTokenResponse instanceof GenerateApiKey.Success) {\n  console.log('Generated API key; refreshing!');\n  const refreshAuthClient = new AuthClient({\n    credentialProvider: CredentialProvider.fromString({apiKey: generateTokenResponse.apiKey}),\n  });\n  const refreshTokenResponse = await refreshAuthClient.refreshApiKey(generateTokenResponse.refreshToken);\n  if (refreshTokenResponse instanceof RefreshApiKey.Success) {\n    console.log('API key refreshed!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`Refreshed API key starts with: ${refreshTokenResponse.apiKey.substring(0, 10)}`);\n    console.log(`New refresh token starts with: ${refreshTokenResponse.refreshToken.substring(0, 10)}`);\n    console.log(`Refreshed API key expires At: ${refreshTokenResponse.expiresAt.epoch()}`);\n  }\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsx)(n.h3,{id:"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u578b",children:"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u578b"}),"\n",(0,s.jsx)(n.p,{children:"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u306f\u3001\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306b\u5fdc\u3058\u3066\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u69cb\u9020\u3092\u542b\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b5\u30dd\u30fc\u30c8\u3055\u308c \u3066\u3044\u308b\u30c7\u30fc\u30bf\u578b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/dictionary-collections",children:"Dictionaries(\u8f9e\u66f8\u578b)"}),"\u306f\u3001\u9806\u5e8f\u306e\u306a\u3044\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u5024\u306e\u30da\u30a2\u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/list-collections",children:"Lists(\u30ea\u30b9\u30c8\u578b)"}),"\u306f\u3001\u9806\u5e8f\u4ed8\u3051\u3089\u308c\u305f\u8981\u7d20\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3001\u5404\u8981\u7d20\u304c\u633f\u5165\u3055\u308c\u305f\u9806\u5e8f\u3067\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/set-collections",children:"Sets(\u30bb\u30c3\u30c8\u578b)"}),"\u306f\u3001\u30e6\u30cb\u30fc\u30af\u306a\u8981\u7d20\u306e\u6587\u5b57\u5217\u306b\u3088\u308b\u3001\u9806\u5e8f\u306e\u306a\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/ja/cache/develop/api-reference/sorted-set-collections",children:"Sorted Sets(\u30bd\u30fc\u30c8\u6e08\u307f\u30bb\u30c3\u30c8\u578b) "}),"\u306f\u3001\u30e6\u30cb\u30fc\u30af\u306a\u8981\u7d20\u306e\u9806\u5e8f\u4ed8\u304d\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\u5404\u8981\u7d20 \u306f\u3001\u5024:\u30b9\u30b3\u30a2\u306e\u30da\u30a2\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["\u5229\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u8a73\u3057\u3044\u60c5\u5831\u306f\u3001",(0,s.jsx)(n.a,{href:"/ja/cache/develop/basics/datatypes",children:"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u578b"}),"\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var s=t(4164);const r={tabItem:"tabItem_Ymn6"};var c=t(4848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,c.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,i),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>S});var s=t(6540),r=t(4164),c=t(3104),i=t(6347),a=t(205),l=t(7485),o=t(1682),h=t(679);function d(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:r}}=e;return{value:n,label:t,attributes:s,default:r}}))}(t);return function(e){const n=(0,o.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.W6)(),c=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(c),(0,s.useCallback)((e=>{if(!c)return;const n=new URLSearchParams(r.location.search);n.set(c,e),r.replace({...r.location,search:n.toString()})}),[c,r])]}function j(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,c=u(e),[i,l]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:c}))),[o,d]=x({queryString:t,groupId:r}),[j,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,c]=(0,h.Dv)(t);return[r,(0,s.useCallback)((e=>{t&&c.set(e)}),[t,c])]}({groupId:r}),m=(()=>{const e=o??j;return p({value:e,tabValues:c})?e:null})();(0,a.A)((()=>{m&&l(m)}),[m]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:c}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),y(e)}),[d,y,c]),tabValues:c}}var y=t(2303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(4848);function g(e){let{className:n,block:t,selectedValue:s,selectValue:i,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,c.a_)(),h=e=>{const n=e.currentTarget,t=l.indexOf(n),r=a[t].value;r!==s&&(o(n),i(r))},d=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:c}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>l.push(e),onKeyDown:d,onClick:h,...c,className:(0,r.A)("tabs__item",m.tabItem,c?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function k(e){let{lazy:n,children:t,selectedValue:r}=e;const c=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=c.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:c.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function C(e){const n=j(e);return(0,f.jsxs)("div",{className:(0,r.A)("tabs-container",m.tabList),children:[(0,f.jsx)(g,{...n,...e}),(0,f.jsx)(k,{...n,...e})]})}function S(e){const n=(0,y.A)();return(0,f.jsx)(C,{...e,children:d(e.children)},String(n))}},1441:(e,n,t)=>{t(6540)},5347:(e,n,t)=>{t.d(n,{r:()=>a});var s=t(1470),r=t(9365),c=t(1432),i=(t(6540),t(4848));const a=e=>{let{js:n,python:t,java:a,kotlin:l,go:o,csharp:h,php:d,rust:u,ruby:p,elixir:x,swift:j,dart:y,cli:m}=e;return n||t||a||l||o||h||d||u||p||x||j||y||m?(0,i.jsxs)(s.A,{children:[n&&(0,i.jsx)(r.A,{value:"js",label:"JavaScript",children:(0,i.jsx)(c.A,{language:"js",children:n})}),t&&(0,i.jsx)(r.A,{value:"python",label:"Python",children:(0,i.jsx)(c.A,{language:"python",children:t})}),a&&(0,i.jsx)(r.A,{value:"java",label:"Java",children:(0,i.jsx)(c.A,{language:"java",children:a})}),l&&(0,i.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,i.jsx)(c.A,{language:"kotlin",children:l})}),o&&(0,i.jsx)(r.A,{value:"go",label:"Go",children:(0,i.jsx)(c.A,{language:"go",children:o})}),h&&(0,i.jsx)(r.A,{value:"csharp",label:"C#",children:(0,i.jsx)(c.A,{language:"csharp",children:h})}),d&&(0,i.jsx)(r.A,{value:"php",label:"PHP",children:(0,i.jsx)(c.A,{language:"php",children:d})}),u&&(0,i.jsx)(r.A,{value:"rust",label:"Rust",children:(0,i.jsx)(c.A,{language:"rust",children:u})}),p&&(0,i.jsx)(r.A,{value:"ruby",label:"Ruby",children:(0,i.jsx)(c.A,{language:"ruby",children:p})}),x&&(0,i.jsx)(r.A,{value:"elixir",label:"Elixir",children:(0,i.jsx)(c.A,{language:"elixir",children:x})}),j&&(0,i.jsx)(r.A,{value:"swift",label:"Swift",children:(0,i.jsx)(c.A,{language:"swift",children:j})}),y&&(0,i.jsx)(r.A,{value:"dart",label:"Dart",children:(0,i.jsx)(c.A,{language:"dart",children:y})}),m&&(0,i.jsx)(r.A,{value:"cli",label:"CLI",children:(0,i.jsx)(c.A,{language:"cli",children:m})})]}):null}}}]);
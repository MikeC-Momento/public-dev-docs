"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[1925],{1213:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var n=s(4848),r=s(8453),l=(s(1441),s(5347));const c={sidebar_position:3,sidebar_label:"Sets",title:"Set API reference",description:"Learn how to interact with the API for set collection data types in Momento Cache."},i="Set API reference for Momento Cache",a={id:"cache/develop/api-reference/set-collections",title:"Set API reference",description:"Learn how to interact with the API for set collection data types in Momento Cache.",source:"@site/docs/cache/develop/api-reference/set-collections.md",sourceDirName:"cache/develop/api-reference",slug:"/cache/develop/api-reference/set-collections",permalink:"/cache/develop/api-reference/set-collections",draft:!1,unlisted:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/cache/develop/api-reference/set-collections.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Sets",title:"Set API reference",description:"Learn how to interact with the API for set collection data types in Momento Cache."},sidebar:"cacheSidebar",previous:{title:"Lists",permalink:"/cache/develop/api-reference/list-collections"},next:{title:"Sorted sets",permalink:"/cache/develop/api-reference/sorted-set-collections"}},o={},d=[{value:"Set methods",id:"set-methods",level:2},{value:"SetAddElement",id:"setaddelement",level:3},{value:"SetAddElements",id:"setaddelements",level:3},{value:"SetFetch",id:"setfetch",level:3},{value:"SetSample",id:"setsample",level:3},{value:"SetRemoveElement",id:"setremoveelement",level:3},{value:"SetRemoveElements",id:"setremoveelements",level:3},{value:"SetContainsElement",id:"setcontainselement",level:3},{value:"SetContainsElements",id:"setcontainselements",level:3},{value:"SetLength",id:"setlength",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{Details:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"set-api-reference-for-momento-cache",children:"Set API reference for Momento Cache"})}),"\n",(0,n.jsx)(t.p,{children:"A set is a collection of elements, but each element can appear only once and order is not guaranteed."}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:["Momento collection types use a ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/collection-ttl",children:"CollectionTTL"}),' to specify their TTL behavior. This is an optional argument for all "write" operations.']})}),"\n",(0,n.jsxs)(t.p,{children:["Example: if your set contains ",(0,n.jsx)(t.code,{children:"[1, 2, 3]"})," and you add 2, the set remains ",(0,n.jsx)(t.code,{children:"[1, 2, 3]."})]}),"\n",(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/basics/datatypes#sets",children:"Sets"})," for more information on their usage."]}),"\n",(0,n.jsx)(t.h2,{id:"set-methods",children:"Set methods"}),"\n",(0,n.jsx)(t.h3,{id:"setaddelement",children:"SetAddElement"}),"\n",(0,n.jsx)(t.p,{children:"Adds an element to a set. If the set item does not already exist, this method will create one."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"setName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the set item to be altered."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"element"}),(0,n.jsx)(t.td,{children:"String | Bytes"}),(0,n.jsx)(t.td,{children:"Element to be added by this operation."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ttl"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/collection-ttl",children:"CollectionTTL object"})}),(0,n.jsx)(t.td,{children:"TTL for the set item in cache. This TTL takes precedence over the TTL used when initializing a cache connection client."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Success"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"const result = await cacheClient.setAddElement(cacheName, 'test-set', 'test-element');\nswitch (result.type) {\n  case CacheSetAddElementResponse.Success:\n    console.log(\"Element added successfully to set 'test-set'\");\n    break;\n  case CacheSetAddElementResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheSetAddElement on set 'test-set' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"setaddelements",children:"SetAddElements"}),"\n",(0,n.jsx)(t.p,{children:"Adds multiple elements to a set item. If the set item does not already exist, this method will create one."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"setName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the set item to be altered."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"elements"}),(0,n.jsx)(t.td,{children:"String[] | Bytes[]"}),(0,n.jsx)(t.td,{children:"Elements to be added by this operation."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ttl"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/collection-ttl",children:"CollectionTTL object"})}),(0,n.jsx)(t.td,{children:"TTL for the set item in cache. This TTL takes precedence over the TTL used when initializing a cache connection client."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Success"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"const result = await cacheClient.setAddElements(cacheName, 'test-set', ['test-element1', 'test-element2']);\nswitch (result.type) {\n  case CacheSetAddElementsResponse.Success:\n    console.log(\"Elements added successfully to set 'test-set'\");\n    break;\n  case CacheSetAddElementsResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheSetAddElements on set 'test-set' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:'  cache_client\n      .set_add_elements(cache_name, "set_name", vec!["value1", "value2"])\n      .await?;\n  println!("Elements added to set");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"setfetch",children:"SetFetch"}),"\n",(0,n.jsx)(t.p,{children:"Gets a set item from a cache."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"setName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"The name of the set item to be retrieved."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsx)(t.p,{children:"The response object for SetFetch returns three possible options, a cache hit, miss, or an error."}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Hit","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"valueSetBytes(): Bytes[]"}),"\n",(0,n.jsx)(t.li,{children:"valueSetString(): String[]"}),"\n",(0,n.jsx)(t.li,{children:"toString(): String"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Miss"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.setAddElements(cacheName, 'test-set', ['test-element1', 'test-element2']);\nconst result = await cacheClient.setFetch(cacheName, 'test-set');\n\n// simplified style; assume the value was found\nconsole.log(`Set fetched: ${result.value()!}`);\n\n// pattern-matching style; safer for production code\nswitch (result.type) {\n  case CacheSetFetchResponse.Hit:\n    console.log('Set fetched successfully- ');\n    result.value().forEach((value, key) => {\n      console.log(`${key} : ${value}`);\n    });\n    break;\n  case CacheSetFetchResponse.Miss:\n    console.log(`Set 'test-set' was not found in cache '${cacheName}'`);\n    break;\n  case CacheSetFetchResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheSetFetch on set 'test-set' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:'  let _fetched_elements: Vec<String> = cache_client\n      .set_fetch(cache_name, "set_name")\n      .await?\n      .try_into()\n      .expect("Expected a set!");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"setsample",children:"SetSample"}),"\n",(0,n.jsx)(t.p,{children:"Gets a random sampling of elements from a set item in a cache."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"setName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"The name of the set item to sample."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"limit"}),(0,n.jsx)(t.td,{children:"Number"}),(0,n.jsx)(t.td,{children:"The maximum number of elements to be retrieved."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsx)(t.p,{children:"The response object for SetSample returns three possible options, a cache hit, miss, or an error."}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Hit","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"valueSetBytes(): Bytes[]"}),"\n",(0,n.jsx)(t.li,{children:"valueSetString(): String[]"}),"\n",(0,n.jsx)(t.li,{children:"toString(): String"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Miss"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.setAddElements(cacheName, 'test-set', ['test-element1', 'test-element2', 'test-element3']);\nconst result = await cacheClient.setSample(cacheName, 'test-set', 2);\n\n// simplified style; assume the value was found\nconsole.log(`Sampled 2 elements from set: ${result.value()!}`);\n\n// pattern-matching style; safer for production code\nswitch (result.type) {\n  case CacheSetSampleResponse.Hit:\n    console.log('Sample of 2 elements from set: ');\n    result.valueSet().forEach((value, key) => {\n      console.log(`${key} : ${value}`);\n    });\n    break;\n  case CacheSetSampleResponse.Miss:\n    console.log(`Set 'test-set' was not found in cache '${cacheName}'`);\n    break;\n  case CacheSetSampleResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheSetSample on set 'test-set' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:'var setAddResult = await cacheClient.SetAddElementsAsync("test-cache", "test-set", new string[] {"foo", "bar", "baz"});\r\nif (setAddResult is CacheSetAddElementsResponse.Success)\r\n{\r\n    Console.WriteLine("Added elements to \'test-set\' successfully");\r\n}\r\nelse if (setAddResult is CacheSetAddElementsResponse.Error error)\r\n{\r\n    throw new Exception($"An error occurred while attempting to delete key \'test-key\' from cache \'test-cache\': {error.ErrorCode}: {error}");\r\n}\r\n\nvar setSampleResult = await cacheClient.SetSampleAsync("test-cache", "test-set", 2);\r\nif (setSampleResult is CacheSetSampleResponse.Hit setSampleHit)\r\n{\r\n    Console.WriteLine($"Sampled random elements from \'test-set\': {String.Join(", ", setSampleHit.ValueSetString)}");\r\n}\r\nelse if (setSampleResult is CacheSetSampleResponse.Error error)\r\n{\r\n    throw new Exception($"An error occurred while attempting to sample from \'test-set\' from cache \'test-cache\': {error.ErrorCode}: {error}");\r\n}\r',php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"setremoveelement",children:"SetRemoveElement"}),"\n",(0,n.jsx)(t.p,{children:"Removes a single element from an existing set item. If the set is emptied as a result, the item is deleted."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"setName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the set item to be altered."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"element"}),(0,n.jsx)(t.td,{children:"String | Bytes"}),(0,n.jsx)(t.td,{children:"Element to be removed by this operation."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Success"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.setAddElement(cacheName, 'test-set', 'test-element');\nconst result = await cacheClient.setRemoveElement(cacheName, 'test-set', 'test-element');\nswitch (result.type) {\n  case CacheSetRemoveElementResponse.Success:\n    console.log(\"Element 'test-element' removed successfully from set 'test-set'\");\n    break;\n  case CacheSetRemoveElementResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheSetRemoveElement on set 'test-set' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"setremoveelements",children:"SetRemoveElements"}),"\n",(0,n.jsx)(t.p,{children:"Removes multiple elements from an existing set item. If the set is emptied as a result, the item is deleted."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"setName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the set item to be altered."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"element"}),(0,n.jsx)(t.td,{children:"String[] | Bytes[]"}),(0,n.jsx)(t.td,{children:"Elements to be removed by this operation."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Success"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.setAddElements(cacheName, 'test-set', ['test-element1', 'test-element2']);\nconst result = await cacheClient.setRemoveElements(cacheName, 'test-set', ['test-element1', 'test-element2']);\nswitch (result.type) {\n  case CacheSetRemoveElementsResponse.Success:\n    console.log(\"Elements 'test-element1' and 'test-element2' removed successfully from set 'test-set'\");\n    break;\n  case CacheSetRemoveElementsResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheSetRemoveElements on set 'test-set' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:'  cache_client\n      .set_remove_elements(cache_name, "set_name", vec!["element1", "element2"])\n      .await?;\n  println!("Elements removed from set");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"setcontainselement",children:"SetContainsElement"}),"\n",(0,n.jsx)(t.p,{children:"Checks if a provided element is in the given set."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"setName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the set item."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"element"}),(0,n.jsx)(t.td,{children:"String | Bytes"}),(0,n.jsx)(t.td,{children:"Name of the element to check existence of."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsx)(t.p,{children:"The response object for SetContainsElement returns three possible options, a cache hit, miss, or an error."}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Hit","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"containsElement(): bool"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Miss"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"setcontainselements",children:"SetContainsElements"}),"\n",(0,n.jsx)(t.p,{children:"Checks if provided elements are in the given set."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"setName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the set item."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"elements"}),(0,n.jsx)(t.td,{children:"String[] | Bytes[]"}),(0,n.jsx)(t.td,{children:"Array of element names to check existence of."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsx)(t.p,{children:"The response object for SetContainsElements returns three possible options, a cache hit, miss, or an error."}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Hit","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"containsElements(): bool[]"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Miss"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"setlength",children:"SetLength"}),"\n",(0,n.jsx)(t.p,{children:"Get the length of an existing set item"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"setName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the set item to be checked."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Hit","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"length()"}),": Number"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Miss"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},9365:(e,t,s)=>{s.d(t,{A:()=>c});s(6540);var n=s(4164);const r={tabItem:"tabItem_Ymn6"};var l=s(4848);function c(e){let{children:t,hidden:s,className:c}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,c),hidden:s,children:t})}},1470:(e,t,s)=>{s.d(t,{A:()=>y});var n=s(6540),r=s(4164),l=s(3104),c=s(6347),i=s(205),a=s(7485),o=s(1682),d=s(679);function h(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:t,children:s}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:s,attributes:n,default:r}}=e;return{value:t,label:s,attributes:n,default:r}}))}(s);return function(e){const t=(0,o.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,s])}function j(e){let{value:t,tabValues:s}=e;return s.some((e=>e.value===t))}function u(e){let{queryString:t=!1,groupId:s}=e;const r=(0,c.W6)(),l=function(e){let{queryString:t=!1,groupId:s}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:t,groupId:s});return[(0,a.aZ)(l),(0,n.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function x(e){const{defaultValue:t,queryString:s=!1,groupId:r}=e,l=m(e),[c,a]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!j({value:t,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=s.find((e=>e.default))??s[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[o,h]=u({queryString:s,groupId:r}),[x,p]=function(e){let{groupId:t}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,d.Dv)(s);return[r,(0,n.useCallback)((e=>{s&&l.set(e)}),[s,l])]}({groupId:r}),f=(()=>{const e=o??x;return j({value:e,tabValues:l})?e:null})();(0,i.A)((()=>{f&&a(f)}),[f]);return{selectedValue:c,selectValue:(0,n.useCallback)((e=>{if(!j({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),p(e)}),[h,p,l]),tabValues:l}}var p=s(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=s(4848);function v(e){let{className:t,block:s,selectedValue:n,selectValue:c,tabValues:i}=e;const a=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.a_)(),d=e=>{const t=e.currentTarget,s=a.indexOf(t),r=i[s].value;r!==n&&(o(t),c(r))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=a.indexOf(e.currentTarget)+1;t=a[s]??a[0];break}case"ArrowLeft":{const s=a.indexOf(e.currentTarget)-1;t=a[s]??a[a.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":s},t),children:i.map((e=>{let{value:t,label:s,attributes:l}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>a.push(e),onKeyDown:h,onClick:d,...l,className:(0,r.A)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":n===t}),children:s??t},t)}))})}function S(e){let{lazy:t,children:s,selectedValue:l}=e;const c=(Array.isArray(s)?s:[s]).filter(Boolean);if(t){const e=c.find((e=>e.props.value===l));return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:c.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==l})))})}function g(e){const t=x(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,b.jsx)(v,{...t,...e}),(0,b.jsx)(S,{...t,...e})]})}function y(e){const t=(0,p.A)();return(0,b.jsx)(g,{...e,children:h(e.children)},String(t))}},1441:(e,t,s)=>{s(6540)},5347:(e,t,s)=>{s.d(t,{r:()=>i});var n=s(1470),r=s(9365),l=s(1432),c=(s(6540),s(4848));const i=e=>{let{js:t,python:s,java:i,kotlin:a,go:o,csharp:d,php:h,rust:m,ruby:j,elixir:u,swift:x,dart:p,cli:f}=e;return t||s||i||a||o||d||h||m||j||u||x||p||f?(0,c.jsxs)(n.A,{children:[t&&(0,c.jsx)(r.A,{value:"js",label:"JavaScript",children:(0,c.jsx)(l.A,{language:"js",children:t})}),s&&(0,c.jsx)(r.A,{value:"python",label:"Python",children:(0,c.jsx)(l.A,{language:"python",children:s})}),i&&(0,c.jsx)(r.A,{value:"java",label:"Java",children:(0,c.jsx)(l.A,{language:"java",children:i})}),a&&(0,c.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,c.jsx)(l.A,{language:"kotlin",children:a})}),o&&(0,c.jsx)(r.A,{value:"go",label:"Go",children:(0,c.jsx)(l.A,{language:"go",children:o})}),d&&(0,c.jsx)(r.A,{value:"csharp",label:"C#",children:(0,c.jsx)(l.A,{language:"csharp",children:d})}),h&&(0,c.jsx)(r.A,{value:"php",label:"PHP",children:(0,c.jsx)(l.A,{language:"php",children:h})}),m&&(0,c.jsx)(r.A,{value:"rust",label:"Rust",children:(0,c.jsx)(l.A,{language:"rust",children:m})}),j&&(0,c.jsx)(r.A,{value:"ruby",label:"Ruby",children:(0,c.jsx)(l.A,{language:"ruby",children:j})}),u&&(0,c.jsx)(r.A,{value:"elixir",label:"Elixir",children:(0,c.jsx)(l.A,{language:"elixir",children:u})}),x&&(0,c.jsx)(r.A,{value:"swift",label:"Swift",children:(0,c.jsx)(l.A,{language:"swift",children:x})}),p&&(0,c.jsx)(r.A,{value:"dart",label:"Dart",children:(0,c.jsx)(l.A,{language:"dart",children:p})}),f&&(0,c.jsx)(r.A,{value:"cli",label:"CLI",children:(0,c.jsx)(l.A,{language:"cli",children:f})})]}):null}}}]);